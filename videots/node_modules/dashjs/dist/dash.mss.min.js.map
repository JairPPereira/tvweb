{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../externals/BigInteger.js","core/errors/ErrorsBase.js","core/events/EventsBase.js","mss/MssEvents.js","mss/MssFragmentInfoController.js","mss/MssFragmentMoofProcessor.js","mss/MssFragmentMoovProcessor.js","mss/MssFragmentProcessor.js","mss/MssHandler.js","mss/errors/MssErrors.js","mss/index.js","mss/parser/MssParser.js","streaming/MediaPlayerEvents.js","streaming/vo/DashJSError.js","streaming/vo/DataChunk.js","streaming/vo/FragmentRequest.js","streaming/vo/metrics/HTTPRequest.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","_dereq_","module","bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","DEFAULT_ALPHABET","supportsNativeBigInt","BigInt","Integer","v","radix","alphabet","caseSensitive","parseBase","parseValue","BigInteger","value","sign","this","isSmall","SmallInteger","NativeBigInt","isPrecise","Math","floor","arrayToSmall","arr","trim","compareAbs","createArray","x","Array","truncate","ceil","add","b","sum","l_a","l_b","carry","base","push","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","shift","result","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","d","nPrev","prev","divide","next","modPow","prototype","Object","create","plus","minus","subtractAny","small","times","multiply","l1","l2","useKaratsuba","multiplyKaratsuba","y","max","slice","ac","bd","_multiplyBySmall","divmod","over","pow","toString","_0","_1","_2","isNegative","exp","isZero","isPositive","isOdd","compareTo","compare","Infinity","eq","neq","notEquals","gt","greater","lt","geq","greaterOrEquals","leq","lesserOrEquals","isPrime","strict","bits","bitLength","logN","log","toJSNumber","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","String","shiftRight","remQuo","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","min","gcd","integerLogarithm","tmp","text","toLowerCase","absBase","alphabetValues","digits","start","parseBaseFromArray","val","toBase","apply","map","valueOf","neg","Number","out","left","digit","toBaseString","stringify","join","parseStringValue","split","decimalPlace","indexOf","test","parseNumberValue","toArray","str","toJSON","parseInt","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","hasOwnProperty","define","amd","ErrorsBase","errors","config","override","publicOnly","err","EventsBase","events","evt","MssEvents","_get","getPrototypeOf","FRAGMENT_INFO_LOADING_COMPLETED","mssEvents","MssFragmentInfoController","context","instance","logger","fragmentModel","started","type","bufferTimeout","startTime","startFragmentTime","index","streamProcessor","eventBus","dashMetrics","playbackController","ISOBoxer","baseURLController","debug","loadNextFragmentInfo","representation","getRepresentationController","getCurrentRepresentation","adaptation","period","mpd","manifest","Period_asArray","AdaptationSet_asArray","segments","SegmentTemplate","SegmentTimeline","S_asArray","segment","timescale","request","_streamingVoFragmentRequest2","mediaType","duration","quality","mediaInfo","getMediaInfo","adaptationIndex","representationId","id","url","resolve","path","media","replace","bandwidth","tManifest","getRequestForSegment","getFragmentModel","isFragmentLoadedOrPending","executeRequest","onFragmentInfoLoadedCompleted","fragmentInfo","response","deltaFragmentTime","deltaTime","_MssFragmentMoofProcessor2","updateSegmentList","Date","getTime","delay","clearTimeout","setTimeout","delayLoadNextFragmentInfo","fatal","error","initialize","registerExternalController","getType","controllerType","on","_MssEvents2","reset","off","unregisterExternalController","getLogger","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory","MssFragmentMoofProcessor","errorHandler","errHandler","processTfrf","tfrf","tfdt","representationController","timeShiftBufferDepth","entry","S","entries","segmentTime","availabilityStartTime","parseFloat","fragment_absolute_time","end","baseMediaDecodeTime","updateDVR","getStreamInfo","manifestInfo","fragment_duration","round","splice","updateRepresentation","trigger","_streamingMediaPlayerEvents2","MANIFEST_VALIDITY_CHANGED","sender","newDuration","_streamingVoDashJSError2","_errorsMssErrors2","MSS_NO_TFRF_CODE","MSS_NO_TFRF_MESSAGE","dvrInfos","getCurrentDVRInfo","addDVRInfo","getBoxOffset","parent","offset","boxes","size","convertFragment","sp","isoFile","parseBuffer","tfhd","fetch","track_ID","traf","createFullBox","version","flags","trun","tfxd","_parent","sepiff","usertype","_saio","entry_count","saiz","sample_count","default_sample_info_size","sample_info_size","NumberOfEntries","moof","getLength","data_offset","saio","trafPosInMoof","sencPosInTraf","write","MssFragmentMoovProcessor","NALUTYPE_SPS","NALUTYPE_PPS","constants","protectionController","adaptationSet","contentProtection","trackId","createMoovBox","moov","createBox","mvhd","creation_time","modification_time","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","createMvhdBox","trak","tkhd","layer","alternate_group","reserved3","width","height","createTkhdBox","mdia","mdhd","language","lang","createMdhdBox","hdlr","VIDEO","handler_type","AUDIO","name","reserved","createHdlrBox","minf","vmhd","graphicsmode","opcolor","createVmhdBox","smhd","balance","createSmhdBox","dinf","dref","location","createDrefBox","stbl","_data","stsd","codec","codecs","substring","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","naluBytes","_i","hexStringtoBuffer","Uint8Array","set","createAVC1ConfigurationRecord","sinf","createOriginalFormatBox","createSchemeTypeBox","createSchemeInformationBox","createAVCVisualSampleEntry","mp4a","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","esds","audioSpecificConfig","esdsLength","createMPEG4AACESDescriptor","createMP4AudioSampleEntry","MSS_UNSUPPORTED_CODEC_CODE","message","MSS_UNSUPPORTED_CODEC_MESSAGE","data","createSampleEntry","createStsdBox","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","createTrexBox","keySystems","pssh_bytes","pssh","parsedBuffer","initData","Utils","appendBox","createProtectionSystemSpecificHeaderBox","getSupportedKeySystemsFromContentProtection","data_format","charCodeAt","stringToCharCode","schm","scheme_type","scheme_version","schi","tenc","default_IsEncrypted","default_IV_size","default_KID","createTrackEncryptionBox","buf","generateMoov","rep","ContentProtection","ftyp","major_brand","minor_version","compatible_brands","createFtypBox","createFile","arrayEqual","arr1","arr2","every","element","saioProcessor","_procFullBox","_procField","_procFieldArray","saizProcessor","sencProcessor","_procEntries","_procEntryField","_procSubEntries","clearAndCryptedData","uuidProcessor","_parsing","fragment_count","MssFragmentProcessor","mssFragmentMoovProcessor","mssFragmentMoofProcessor","processFragment","addBoxProcessor","_MssFragmentMoovProcessor2","MssHandler","initSegmentType","mssFragmentProcessor","_MssFragmentProcessor2","onInitializationRequested","getStreamProcessor","chunk","streamId","endFragment","_streamingVoDataChunk2","segmentType","createDataChunk","FRAGMENT_LOADING_PROGRESS","bytes","INIT_FRAGMENT_LOADED","startFragmentInfoControllers","streamController","getStreamController","getActiveStreamProcessors","forEach","processor","FRAGMENTED_TEXT","alreadyRegistered","externalControllers","getExternalControllers","fragmentInfoController","_MssFragmentInfoController2","onSegmentMediaLoaded","streamInfo","isDynamic","DVRWindowSize","onPlaybackPaused","getIsDynamic","onPlaybackSeekAsked","onTTMLPreProcess","ttmlSubtitles","INIT_REQUESTED","PLAYBACK_PAUSED","PLAYBACK_SEEK_ASKED","FRAGMENT_LOADING_COMPLETED","TTML_TO_PARSE","createMssParser","_parserMssParser2","registerEvents","getSingletonFactoryByName","getClassName","EVENT_PRIORITY_HIGH","factory","updateClassFactory","MssErrors","mssErrors","window","global","_MssHandler2","MssParser","BASE64","manifestModel","mediaPlayerModel","settings","DEFAULT_TIME_SCALE","SUPPORTED_CODECS","ROLE","CAPT","SUBT","DESC","ACCESSIBILITY","samplingFrequencyIndex","96000","88200","64000","48000","44100","32000","24000","22050","16000","12000","11025","8000","7350","mimeTypeMap","video","audio","mapAdaptationSet","streamIndex","segmentTemplate","representations","qualityLevels","getAttribute","contentType","mimeType","subType","maxWidth","maxHeight","role","schemeIdUri","Role","Role_asArray","accessibility","Accessibility","Accessibility_asArray","mediaUrl","streamIndexTimeScale","segmentTimeline","chunks","getElementsByTagName","prevSegment","_externalsBigInteger2","MAX_SAFE_INTEGER","mapSegmentTimeline","mapSegmentTemplate","BaseURL","Id","mapRepresentation","Representation","Representation_asArray","qualityLevel","fourCCValue","toUpperCase","warn","nalHeader","exec","substr","getH264Codec","samplingRate","objectType","arr16","indexFreq","extensionSamplingFrequencyIndex","Channels","Uint16Array","setAttribute","getAACCodec","STPP","getKIDFromProtectionHeader","protectionHeader","wrmHeader","KID","prHeader","recordType","recordLength","recordValue","subarray","getWRMHeaderFromPRHeader","decodeArray","firstChild","buffer","fromCharCode","DOMParser","parseFromString","querySelector","textContent","uuid","swapBytes","convertUuidEndianness","pos1","pos2","temp","processManifest","xmlDoc","manifestLoadedTime","contentProtections","smoothStreamingMedia","protection","adaptations","timestampOffset","segmentDuration","protocol","profiles","dvrWindowLength","isNaN","mediaPresentationDuration","minBufferTime","ttmlTimeIsRelative","refreshManifestOnSwitchTrack","doNotUpdateDVRWindowOnBufferUpdated","ignorePostponeTimePeriod","Period","streams","AdaptationSet","mapPeriod","pro","__text","__prefix","pro_asArray","createPRContentProtection","widevineCP","wvCencHeader","encodeASCII","createWidevineContentProtection","ContentProtection_asArray","initialization","endTime","targetLiveDelay","getLiveDelay","get","streaming","liveDelayFragmentCount","targetDelayCapping","liveDelay","bufferTime","update","stableBufferTime","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","prevManifest","getValue","presentationTimeOffset","parse","performance","now","parseDOM","xmlParseTime","mss2dashTime","info","toPrecision","getMatchers","getIron","MediaPlayerEvents","AST_IN_FUTURE","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","ERROR","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","LOG","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","TRACK_CHANGE_RENDERED","SOURCE_INITIALIZED","STREAM_INITIALIZING","STREAM_INITIALIZED","STREAM_TEARDOWN_COMPLETE","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","TTML_PARSED","CAPTION_RENDERED","CAPTION_CONTAINER_RESIZE","CAN_PLAY","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STALLED","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","PLAYBACK_WAITING","mediaPlayerEvents","DashJSError","DataChunk","NaN","FragmentRequest","_voMetricsHTTPRequest","HTTPRequest","INIT_SEGMENT_TYPE","init","MEDIA_SEGMENT_TYPE","action","ACTION_DOWNLOAD","serviceLocation","requestStartDate","firstByteDate","requestEndDate","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","ACTION_COMPLETE","tcpid","actualurl","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_quality","_responseHeaders","_serviceLocation","GET","HEAD","MPD_TYPE","XLINK_EXPANSION_TYPE","INDEX_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","OTHER_TYPE","HTTPRequestTrace","s"],"mappings":"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","file":"dash.mss.min.js","sourceRoot":"./src/","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET=\"0123456789abcdefghijklmnopqrstuvwxyz\";var supportsNativeBigInt=typeof BigInt===\"function\";function Integer(v,radix,alphabet,caseSensitive){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value)};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value)};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value)};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value)};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value)};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)]}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value)};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value)};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b}if(b===_0)break;b/=_2;x=x.square()}return y};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0)};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1)};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1)};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0)};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero()};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.isUnit())throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1))};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1))};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:typeof v===\"bigint\"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false}return low.add(Integer.fromArray(result,BASE,false))}var parseBase=function(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase()}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i}for(i=0;i<length;i++){var c=text[i];if(c===\"-\")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit]}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(function(x){return stringify(x,alphabet)}).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value)};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10)};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?\"-\"+v:v))}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v))}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}if(typeof v===\"bigint\"){return new NativeBigInt(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend (errors, config) {\n        if (!errors) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) continue;\n            if (publicOnly && errors[err].indexOf('public_') === -1) continue;\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n\nclass MssEvents extends EventsBase {\n\n    constructor() {\n        super();\n\n        this.FRAGMENT_INFO_LOADING_COMPLETED = 'fragmentInfoLoadingCompleted';\n    }\n}\n\nlet mssEvents = new MssEvents();\nexport default mssEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssEvents from './MssEvents';\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\n\nfunction MssFragmentInfoController(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    let instance,\n        logger,\n        fragmentModel,\n        started,\n        type,\n        bufferTimeout,\n        startTime,\n        startFragmentTime,\n        index;\n\n    const streamProcessor = config.streamProcessor;\n    const eventBus = config.eventBus;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const ISOBoxer = config.ISOBoxer;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const controllerType = 'MssFragmentInfoController';\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function initialize() {\n        started = false;\n\n        startTime = null;\n        startFragmentTime = null;\n\n        // Register to StreamProcessor as external controller\n        streamProcessor.registerExternalController(instance);\n        type = streamProcessor.getType();\n        fragmentModel = streamProcessor.getFragmentModel();\n    }\n\n    function doStart() {\n        if (started === true) {\n            return;\n        }\n\n        logger.debug('Do start');\n\n        eventBus.on(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, onFragmentInfoLoadedCompleted, instance);\n\n        started = true;\n        startTime = new Date().getTime();\n        index = 0;\n\n        loadNextFragmentInfo();\n    }\n\n    function doStop() {\n        if (!started) {\n            return;\n        }\n        logger.debug('Do stop');\n\n        eventBus.off(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, onFragmentInfoLoadedCompleted, instance);\n\n        // Stop buffering process\n        clearTimeout(bufferTimeout);\n        started = false;\n\n        startTime = null;\n        startFragmentTime = null;\n    }\n\n    function reset() {\n        doStop();\n        streamProcessor.unregisterExternalController(instance);\n    }\n\n    function loadNextFragmentInfo() {\n        // Check if running state\n        if (!started) {\n            return;\n        }\n\n        // Get last segment from SegmentTimeline\n        const representation = getCurrentRepresentation();\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S_asArray;\n        const segment = segments[segments.length - 1];\n\n        logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));\n\n        // Generate segment request\n        const request = getRequestForSegment(adaptation, representation, segment);\n\n        // Send segment request\n        requestFragment.call(this, request);\n    }\n\n    function delayLoadNextFragmentInfo(delay) {\n        clearTimeout(bufferTimeout);\n        bufferTimeout = setTimeout(function () {\n            bufferTimeout = null;\n            loadNextFragmentInfo();\n        }, delay * 1000);\n    }\n\n    function getRequestForSegment(adaptation, representation, segment) {\n        let timescale = adaptation.SegmentTemplate.timescale;\n        let request = new FragmentRequest();\n\n        request.mediaType = type;\n        request.type = 'FragmentInfoSegment';\n        // request.range = segment.mediaRange;\n        request.startTime = segment.t / timescale;\n        request.duration = segment.d / timescale;\n        request.timescale = timescale;\n        // request.availabilityStartTime = segment.availabilityStartTime;\n        // request.availabilityEndTime = segment.availabilityEndTime;\n        // request.wallStartTime = segment.wallStartTime;\n        request.quality = representation.index;\n        request.index = index++;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.adaptationIndex = representation.adaptation.index;\n        request.representationId = representation.id;\n        request.url = baseURLController.resolve(representation.path).url + adaptation.SegmentTemplate.media;\n        request.url = request.url.replace('$Bandwidth$', representation.bandwidth);\n        request.url = request.url.replace('$Time$', segment.tManifest ? segment.tManifest : segment.t);\n        request.url = request.url.replace('/Fragments(', '/FragmentInfo(');\n\n        return request;\n    }\n\n    function getCurrentRepresentation() {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        return representation;\n    }\n\n    function requestFragment(request) {\n\n        logger.debug('Load fragment for time: ' + request.startTime);\n        if (streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)) {\n            // We may have reached end of timeline in case of start-over streams\n            logger.debug('No more fragments');\n            return;\n        }\n\n        fragmentModel.executeRequest(request);\n    }\n\n    function onFragmentInfoLoadedCompleted(e) {\n        if (e.streamProcessor !== streamProcessor) {\n            return;\n        }\n\n        const request = e.fragmentInfo.request;\n        if (!e.fragmentInfo.response) {\n            logger.error('Load error', request.url);\n            return;\n        }\n\n        let deltaFragmentTime,\n            deltaTime;\n\n        logger.debug('FragmentInfo loaded: ', request.url);\n\n        if (!startFragmentTime) {\n            startFragmentTime = request.startTime;\n        }\n\n        try {\n            // Process FramgentInfo in order to update segment timeline (DVR window)\n            const mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                dashMetrics: dashMetrics,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                eventBus: eventBus,\n                debug: debug\n            });\n            mssFragmentMoofProcessor.updateSegmentList(e.fragmentInfo, streamProcessor);\n\n            deltaTime = (new Date().getTime() - startTime) / 1000;\n            deltaFragmentTime = (request.startTime + request.duration) - startFragmentTime;\n            delayLoadNextFragmentInfo(Math.max(0, (deltaFragmentTime - deltaTime)));\n        } catch (e) {\n            logger.fatal('Internal error while processing fragment info segment ');\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        initialize: initialize,\n        controllerType: controllerType,\n        start: doStart,\n        getType: getType,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentInfoController.__dashjs_factory_name = 'MssFragmentInfoController';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from '../streaming/vo/DashJSError';\nimport MssErrors from './errors/MssErrors';\n\nimport Events from '../streaming/MediaPlayerEvents';\n\n/**\n * @module MssFragmentMoofProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoofProcessor(config) {\n\n    config = config || {};\n    let instance,\n        type,\n        logger;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const errorHandler = config.errHandler;\n    const eventBus = config.eventBus;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        type = '';\n    }\n\n    function processTfrf(request, tfrf, tfdt, streamProcessor) {\n        const representationController = streamProcessor.getRepresentationController();\n        const representation = representationController.getCurrentRepresentation();\n\n        const manifest = representation.adaptation.period.mpd.manifest;\n        const adaptation = manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];\n        const timescale = adaptation.SegmentTemplate.timescale;\n\n        type = streamProcessor.getType();\n\n        if (manifest.type !== 'dynamic' && !manifest.timeShiftBufferDepth) {\n            return;\n        }\n\n        if (!tfrf) {\n            errorHandler.error(new DashJSError(MssErrors.MSS_NO_TFRF_CODE, MssErrors.MSS_NO_TFRF_MESSAGE));\n            return;\n        }\n\n        // Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)\n        const segments = adaptation.SegmentTemplate.SegmentTimeline.S;\n        const entries = tfrf.entry;\n        let entry,\n            segmentTime,\n            range;\n        let segment = null;\n        let t = 0;\n        let availabilityStartTime = null;\n\n        if (entries.length === 0) {\n            return;\n        }\n\n        // Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)\n        entry = entries[0];\n\n        // In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)\n        // => then do not update anymore timeline\n        if (manifest.type === 'static') {\n            // Get first segment time\n            segmentTime = segments[0].tManifest ? parseFloat(segments[0].tManifest) : segments[0].t;\n            if (entry.fragment_absolute_time > (segmentTime + (manifest.timeShiftBufferDepth * timescale))) {\n                return;\n            }\n        }\n\n        logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));\n\n        // Get last segment time\n        segmentTime = segments[segments.length - 1].tManifest ? parseFloat(segments[segments.length - 1].tManifest) : segments[segments.length - 1].t;\n        logger.debug('Last segment - t = ', (segmentTime / timescale));\n\n        // Check if we have to append new segment to timeline\n        if (entry.fragment_absolute_time <= segmentTime) {\n            // Update DVR window range\n            // => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(request.mediaType, range, streamProcessor.getStreamInfo().manifestInfo);\n            return;\n        }\n\n        logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));\n        segment = {};\n        segment.t = entry.fragment_absolute_time;\n        segment.d = entry.fragment_duration;\n        // If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time\n        if (segments[0].tManifest) {\n            segment.t -= parseFloat(segments[0].tManifest) - segments[0].t;\n            segment.tManifest = entry.fragment_absolute_time;\n        }\n        segments.push(segment);\n\n        // In case of static start-over streams, update content duration\n        if (manifest.type === 'static') {\n            if (type === 'video') {\n                segment = segments[segments.length - 1];\n                var end = (segment.t + segment.d) / timescale;\n                if (end > representation.adaptation.period.duration) {\n                    eventBus.trigger(Events.MANIFEST_VALIDITY_CHANGED, { sender: this, newDuration: end });\n                }\n            }\n            return;\n        }\n        // In case of live streams, update segment timeline according to DVR window\n        else if (manifest.timeShiftBufferDepth && manifest.timeShiftBufferDepth > 0) {\n            // Get timestamp of the last segment\n            segment = segments[segments.length - 1];\n            t = segment.t;\n\n            // Determine the segments' availability start time\n            availabilityStartTime = Math.round((t - (manifest.timeShiftBufferDepth * timescale)) / timescale);\n\n            // Remove segments prior to availability start time\n            segment = segments[0];\n            while (Math.round(segment.t / timescale) < availabilityStartTime) {\n                logger.debug('Remove segment  - t = ' + (segment.t / timescale));\n                segments.splice(0, 1);\n                segment = segments[0];\n            }\n\n            // Update DVR window range => set range end to end time of current segment\n            range = {\n                start: segments[0].t / timescale,\n                end: (tfdt.baseMediaDecodeTime / timescale) + request.duration\n            };\n\n            updateDVR(type, range, streamProcessor.getStreamInfo().manifestInfo);\n        }\n\n        representationController.updateRepresentation(representation, true);\n    }\n\n    function updateDVR(type, range, manifestInfo) {\n        const dvrInfos = dashMetrics.getCurrentDVRInfo(type);\n        if (!dvrInfos || (range.end > dvrInfos.range.end)) {\n            logger.debug('Update DVR Infos [' + range.start + ' - ' + range.end + ']');\n            dashMetrics.addDVRInfo(type, playbackController.getTime(), manifestInfo, range);\n        }\n    }\n\n    // This function returns the offset of the 1st byte of a child box within a container box\n    function getBoxOffset(parent, type) {\n        let offset = 8;\n        let i = 0;\n\n        for (i = 0; i < parent.boxes.length; i++) {\n            if (parent.boxes[i].type === type) {\n                return offset;\n            }\n            offset += parent.boxes[i].size;\n        }\n        return offset;\n    }\n\n    function convertFragment(e, sp) {\n        let i;\n\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        const traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        const trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, sp);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        const sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [0];\n\n                const saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 0xFFFFFE; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 0x020000; // set tfhd.default-base-is-moof to true\n        trun.flags |= 0x000001; // set trun.data-offset-present to true\n\n        // Update trun.data_offset field that corresponds to first data byte (inside mdat box)\n        const moof = isoFile.fetch('moof');\n        let length = moof.getLength();\n        trun.data_offset = length + 8;\n\n        // Update saio box offset field according to new senc box offset\n        let saio = isoFile.fetch('saio');\n        if (saio !== null) {\n            let trafPosInMoof = getBoxOffset(moof, 'traf');\n            let sencPosInTraf = getBoxOffset(traf, 'senc');\n            // Set offset from begin fragment to the first IV field in senc box\n            saio.offset[0] = trafPosInMoof + sencPosInTraf + 16; // 16 = box header (12) + sample_count field size (4)\n        }\n\n        // Write transformed/processed fragment into request reponse data\n        e.response = isoFile.write();\n    }\n\n    function updateSegmentList(e, sp) {\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        if (!e.response) {\n            throw new Error('e.response parameter is missing');\n        }\n\n        const isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        const tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let tfrf = isoFile.fetch('tfrf');\n        processTfrf(e.request, tfrf, tfdt, sp);\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    instance = {\n        convertFragment: convertFragment,\n        updateSegmentList: updateSegmentList,\n        getType: getType\n    };\n\n    setup();\n    return instance;\n}\n\nMssFragmentMoofProcessor.__dashjs_factory_name = 'MssFragmentMoofProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n import MssErrors from './errors/MssErrors';\n\n/**\n * @module MssFragmentMoovProcessor\n * @ignore\n * @param {Object} config object\n */\nfunction MssFragmentMoovProcessor(config) {\n    config = config || {};\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n    const constants = config.constants;\n    const ISOBoxer = config.ISOBoxer;\n\n    let protectionController = config.protectionController;\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        timescale,\n        trackId;\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case constants.AUDIO:\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection && protectionController) {\n            let supportedKS = protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);\n            createProtectionSystemSpecificHeaderBox(moov, supportedKS);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = timescale; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = Math.round(period.duration * timescale); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = Math.round(period.duration * timescale); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = timescale; // the time-scale for the entire presentation\n        mdhd.duration = Math.round(period.duration * timescale); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media (see getLanguageCode())\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n                hdlr.handler_type = 'vide';\n                break;\n            case constants.AUDIO:\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case constants.VIDEO:\n            case constants.AUDIO:\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    code: MssErrors.MSS_UNSUPPORTED_CODEC_CODE,\n                    message: MssErrors.MSS_UNSUPPORTED_CODEC_MESSAGE,\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBox(moov, keySystems) {\n        let pssh_bytes,\n            pssh,\n            i,\n            parsedBuffer;\n\n        for (i = 0; i < keySystems.length; i += 1) {\n            pssh_bytes = keySystems[i].initData;\n            if (pssh_bytes) {\n                parsedBuffer = ISOBoxer.parseBuffer(pssh_bytes);\n                pssh = parsedBuffer.fetch('pssh');\n                if (pssh) {\n                    ISOBoxer.Utils.appendBox(moov, pssh);\n                }\n            }\n        }\n    }\n\n    function createTrackEncryptionBox(schi) {\n        let tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] : [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n        if (!rep || !rep.adaptation) {\n            return;\n        }\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        timescale = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    instance = {\n        generateMoov: generateMoov\n    };\n\n    return instance;\n}\n\nMssFragmentMoovProcessor.__dashjs_factory_name = 'MssFragmentMoovProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport MssEvents from './MssEvents';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create({protectionController: protectionController,\n            constants: config.constants, ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                dashMetrics: dashMetrics,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                eventBus: eventBus,\n                debug: debug,\n                errHandler: config.errHandler\n            });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, sp) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        let request = e.request;\n\n        if (request.type === 'MediaSegment') {\n            // it's a MediaSegment, let's convert fragment\n            mssFragmentMoofProcessor.convertFragment(e, sp);\n\n        } else if (request.type === 'FragmentInfoSegment') {\n\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\n                fragmentInfo: e,\n                streamProcessor: sp\n            });\n\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport MssFragmentInfoController from './MssFragmentInfoController';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\nimport MssErrors from './errors/MssErrors';\nimport DashJSError from '../streaming/vo/DashJSError';\n\nfunction MssHandler(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = config.eventBus;\n    const events = config.events;\n    const constants = config.constants;\n    const initSegmentType = config.initSegmentType;\n    let dashMetrics = config.dashMetrics;\n    let playbackController = config.playbackController;\n    let protectionController = config.protectionController;\n    let mssFragmentProcessor = MssFragmentProcessor(context).create({\n        dashMetrics: dashMetrics,\n        playbackController: playbackController,\n        protectionController: protectionController,\n        eventBus: eventBus,\n        constants: constants,\n        ISOBoxer: config.ISOBoxer,\n        debug: config.debug,\n        errHandler: config.errHandler\n    });\n    let mssParser,\n        instance;\n\n    function setup() {}\n\n    function onInitializationRequested(e) {\n        let streamProcessor = e.sender.getStreamProcessor();\n        let request = new FragmentRequest();\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n\n        request.mediaType = representation.adaptation.type;\n        request.type = initSegmentType;\n        request.range = representation.range;\n        request.quality = representation.index;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, streamProcessor.getStreamInfo().id, e.type !== events.FRAGMENT_LOADING_PROGRESS);\n\n        try {\n            // Generate initialization segment (moov)\n            chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n        } catch (e) {\n            config.errHandler.error(new DashJSError(e.code, e.message, e.data));\n        }\n\n        eventBus.trigger(events.INIT_FRAGMENT_LOADED, {\n            chunk: chunk,\n            fragmentModel: streamProcessor.getFragmentModel()\n        });\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function createDataChunk(request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function startFragmentInfoControllers() {\n\n        let streamController = playbackController.getStreamController();\n        if (!streamController) {\n            return;\n        }\n\n        // Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or fragmentedText)\n        let processors = streamController.getActiveStreamProcessors();\n        processors.forEach(function (processor) {\n            if (processor.getType() === constants.VIDEO ||\n                processor.getType() === constants.AUDIO ||\n                processor.getType() === constants.FRAGMENTED_TEXT) {\n\n                // Check MssFragmentInfoController already registered to StreamProcessor\n                let i;\n                let alreadyRegistered = false;\n                let externalControllers = processor.getExternalControllers();\n                for (i = 0; i < externalControllers.length; i++) {\n                    if (externalControllers[i].controllerType &&\n                        externalControllers[i].controllerType === 'MssFragmentInfoController') {\n                        alreadyRegistered = true;\n                    }\n                }\n\n                if (!alreadyRegistered) {\n                    let fragmentInfoController = MssFragmentInfoController(context).create({\n                        streamProcessor: processor,\n                        eventBus: eventBus,\n                        dashMetrics: dashMetrics,\n                        playbackController: playbackController,\n                        baseURLController: config.baseURLController,\n                        ISOBoxer: config.ISOBoxer,\n                        debug: config.debug\n                    });\n                    fragmentInfoController.initialize();\n                    fragmentInfoController.start();\n                }\n            }\n        });\n    }\n\n    function onSegmentMediaLoaded(e) {\n        if (e.error) {\n            return;\n        }\n        // Process moof to transcode it from MSS to DASH\n        let streamProcessor = e.sender.getStreamProcessor();\n        mssFragmentProcessor.processFragment(e, streamProcessor);\n\n        // Start MssFragmentInfoControllers in case of start-over streams\n        let streamInfo = streamProcessor.getStreamInfo();\n        if (!streamInfo.manifestInfo.isDynamic && streamInfo.manifestInfo.DVRWindowSize !== Infinity) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackPaused() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onPlaybackSeekAsked() {\n        if (playbackController.getIsDynamic() && playbackController.getTime() !== 0) {\n            startFragmentInfoControllers();\n        }\n    }\n\n    function onTTMLPreProcess(ttmlSubtitles) {\n        if (!ttmlSubtitles || !ttmlSubtitles.data) {\n            return;\n        }\n\n        ttmlSubtitles.data = ttmlSubtitles.data.replace(/http:\\/\\/www.w3.org\\/2006\\/10\\/ttaf1/gi, 'http://www.w3.org/ns/ttml');\n    }\n\n    function registerEvents() {\n        eventBus.on(events.INIT_REQUESTED, onInitializationRequested, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_PAUSED, onPlaybackPaused, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH); /* jshint ignore:line */\n        eventBus.on(events.TTML_TO_PARSE, onTTMLPreProcess, instance);\n    }\n\n    function reset() {\n        eventBus.off(events.INIT_REQUESTED, onInitializationRequested, this);\n        eventBus.off(events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(events.PLAYBACK_SEEK_ASKED, onPlaybackSeekAsked, this);\n        eventBus.off(events.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n        eventBus.off(events.TTML_TO_PARSE, onTTMLPreProcess, this);\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset: reset,\n        createMssParser: createMssParser,\n        registerEvents: registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nconst factory = dashjs.FactoryMaker.getClassFactory(MssHandler); /* jshint ignore:line */\nfactory.errors = MssErrors;\ndashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory; /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../core/errors/ErrorsBase';\n/**\n * @class\n *\n */\nclass MssErrors extends ErrorsBase {\n\tconstructor () {\n        super();\n        /**\n         * Error code returned when no tfrf box is detected in MSS live stream\n         */\n        this.MSS_NO_TFRF_CODE = 200;\n\n        /**\n         * Error code returned when one of the codecs defined in the manifest is not supported\n         */\n        this.MSS_UNSUPPORTED_CODEC_CODE = 201;\n\n        this.MSS_NO_TFRF_MESSAGE = 'Missing tfrf in live media segment';\n        this.MSS_UNSUPPORTED_CODEC_MESSAGE = 'Unsupported codec';\n    }\n}\n\nlet mssErrors = new MssErrors();\nexport default mssErrors;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MssHandler from './MssHandler';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MssHandler = MssHandler;\n\nexport default dashjs;\nexport { MssHandler };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @module MssParser\n * @ignore\n * @param {Object} config object\n */\n\nimport BigInt from '../../../externals/BigInteger';\n\nfunction MssParser(config) {\n    config = config || {};\n    const BASE64 = config.BASE64;\n    const debug = config.debug;\n    const constants = config.constants;\n    const manifestModel = config.manifestModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const settings = config.settings;\n\n    const DEFAULT_TIME_SCALE = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    // MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)\n    const ROLE = {\n        'CAPT': 'main',\n        'SUBT': 'alternate',\n        'DESC': 'main'\n    };\n    const ACCESSIBILITY = {\n        'DESC': '2'\n    };\n    const samplingFrequencyIndex = {\n        96000: 0x0,\n        88200: 0x1,\n        64000: 0x2,\n        48000: 0x3,\n        44100: 0x4,\n        32000: 0x5,\n        24000: 0x6,\n        22050: 0x7,\n        16000: 0x8,\n        12000: 0x9,\n        11025: 0xA,\n        8000: 0xB,\n        7350: 0xC\n    };\n    const mimeTypeMap = {\n        'video': 'video/mp4',\n        'audio': 'audio/mp4',\n        'text': 'application/mp4'\n    };\n\n    let instance,\n        logger;\n\n\n    function setup() {\n        logger = debug.getLogger(instance);\n    }\n\n    function mapPeriod(smoothStreamingMedia, timescale) {\n        const period = {};\n        let streams,\n            adaptation;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i], timescale);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex, timescale) {\n        const adaptationSet = {};\n        const representations = [];\n        let segmentTemplate;\n        let qualityLevels,\n            representation,\n            segments,\n            i;\n\n        adaptationSet.id = streamIndex.getAttribute('Name') ? streamIndex.getAttribute('Name') : streamIndex.getAttribute('Type');\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)\n        if (adaptationSet.subType) {\n            if (ROLE[adaptationSet.subType]) {\n                let role = {\n                    schemeIdUri: 'urn:mpeg:dash:role:2011',\n                    value: ROLE[adaptationSet.subType]\n                };\n                adaptationSet.Role = role;\n                adaptationSet.Role_asArray = [role];\n            }\n            if (ACCESSIBILITY[adaptationSet.subType]) {\n                let accessibility = {\n                    schemeIdUri: 'urn:tva:metadata:cs:AudioPurposeCS:2007',\n                    value: ACCESSIBILITY[adaptationSet.subType]\n                };\n                adaptationSet.Accessibility = accessibility;\n                adaptationSet.Accessibility_asArray = [accessibility];\n            }\n        }\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex, timescale);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n        const representation = {};\n        const type = streamIndex.getAttribute('Type');\n        let fourCCValue = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null || fourCCValue === '') {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null || fourCCValue === '') {\n            if (type === constants.AUDIO) {\n                fourCCValue = 'AAC';\n            } else if (type === constants.VIDEO) {\n                logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type \"video\"');\n                return null;\n            }\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            logger.warn('Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = constants.STPP;\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        const samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let objectType = 0;\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex, timescale) {\n        const segmentTemplate = {};\n        let mediaUrl,\n            streamIndexTimeScale,\n            url;\n\n        url = streamIndex.getAttribute('Url');\n        mediaUrl = url ? url.replace('{bitrate}', '$Bandwidth$') : null;\n        mediaUrl = mediaUrl ? mediaUrl.replace('{start time}', '$Time$') : null;\n\n        streamIndexTimeScale = streamIndex.getAttribute('TimeScale');\n        streamIndexTimeScale = streamIndexTimeScale ? parseFloat(streamIndexTimeScale) : timescale;\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = streamIndexTimeScale;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex, segmentTemplate.timescale);\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex, timescale) {\n        const segmentTimeline = {};\n        const chunks = streamIndex.getElementsByTagName('c');\n        const segments = [];\n        let segment,\n            prevSegment,\n            tManifest,\n            i,j,r;\n        let duration = 0;\n\n        for (i = 0; i < chunks.length; i++) {\n            segment = {};\n\n            // Get time 't' attribute value\n            tManifest = chunks[i].getAttribute('t');\n\n            // => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)\n            // => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)\n            if (tManifest && BigInt(tManifest).greater(BigInt(Number.MAX_SAFE_INTEGER))) {\n                segment.tManifest = tManifest;\n            }\n            segment.t = parseFloat(tManifest);\n\n            // Get duration 'd' attribute value\n            segment.d = parseFloat(chunks[i].getAttribute('d'));\n\n            // If 't' not defined for first segment then t=0\n            if ((i === 0) && !segment.t) {\n                segment.t = 0;\n            }\n\n            if (i > 0) {\n                prevSegment = segments[segments.length - 1];\n                // Update previous segment duration if not defined\n                if (!prevSegment.d) {\n                    if (prevSegment.tManifest) {\n                        prevSegment.d = BigInt(tManifest).subtract(BigInt(prevSegment.tManifest)).toJSNumber();\n                    } else {\n                        prevSegment.d = segment.t - prevSegment.t;\n                    }\n                    duration += prevSegment.d;\n                }\n                // Set segment absolute timestamp if not set in manifest\n                if (!segment.t) {\n                    if (prevSegment.tManifest) {\n                        segment.tManifest = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                        segment.t = parseFloat(segment.tManifest);\n                    } else {\n                        segment.t = prevSegment.t + prevSegment.d;\n                    }\n                }\n            }\n\n            if (segment.d) {\n                duration += segment.d;\n            }\n\n            // Create new segment\n            segments.push(segment);\n\n            // Support for 'r' attribute (i.e. \"repeat\" as in MPEG-DASH)\n            r = parseFloat(chunks[i].getAttribute('r'));\n            if (r) {\n\n                for (j = 0; j < (r - 1); j++) {\n                    prevSegment = segments[segments.length - 1];\n                    segment = {};\n                    segment.t = prevSegment.t + prevSegment.d;\n                    segment.d = prevSegment.d;\n                    if (prevSegment.tManifest) {\n                        segment.tManifest  = BigInt(prevSegment.tManifest).add(BigInt(prevSegment.d)).toString();\n                    }\n                    duration += segment.d;\n                    segments.push(segment);\n                }\n            }\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n        segmentTimeline.duration = duration / timescale;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        if (wrmHeader) {\n            // Convert from multi-byte to unicode\n            wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n            // Convert to string\n            wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n            // Parse <WRMHeader> to get KID field value\n            xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n            KID = xmlReader.querySelector('KID').textContent;\n\n            // Get KID (base64 decoded) as byte array\n            KID = BASE64.decodeArray(KID);\n\n            // Convert UUID from little-endian to big-endian\n            convertUuidEndianness(KID);\n        }\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        const temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n        let pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n        return {\n            schemeIdUri: 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n            value: 'com.microsoft.playready',\n            pro: pro,\n            pro_asArray: pro\n        };\n    }\n\n    function createWidevineContentProtection(KID) {\n        let widevineCP = {\n            schemeIdUri: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n            value: 'com.widevine.alpha'\n        };\n        if (!KID)\n            return widevineCP;\n        // Create Widevine CENC header (Protocol Buffer) with KID value\n        const wvCencHeader = new Uint8Array(2 + KID.length);\n        wvCencHeader[0] = 0x12;\n        wvCencHeader[1] = 0x10;\n        wvCencHeader.set(KID, 2);\n\n        // Create a pssh box\n        const length = 12 /* box length, type, version and flags */ + 16 /* SystemID */ + 4 /* data length */ + wvCencHeader.length;\n        let pssh = new Uint8Array(length);\n        let i = 0;\n\n        // Set box length value\n        pssh[i++] = (length & 0xFF000000) >> 24;\n        pssh[i++] = (length & 0x00FF0000) >> 16;\n        pssh[i++] = (length & 0x0000FF00) >> 8;\n        pssh[i++] = (length & 0x000000FF);\n\n        // Set type ('pssh'), version (0) and flags (0)\n        pssh.set([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00], i);\n        i += 8;\n\n        // Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')\n        pssh.set([0xed, 0xef, 0x8b, 0xa9,  0x79, 0xd6, 0x4a, 0xce, 0xa3, 0xc8, 0x27, 0xdc, 0xd5, 0x1d, 0x21, 0xed], i);\n        i += 16;\n\n        // Set data length value\n        pssh[i++] = (wvCencHeader.length & 0xFF000000) >> 24;\n        pssh[i++] = (wvCencHeader.length & 0x00FF0000) >> 16;\n        pssh[i++] = (wvCencHeader.length & 0x0000FF00) >> 8;\n        pssh[i++] = (wvCencHeader.length & 0x000000FF);\n\n        // Copy Widevine CENC header\n        pssh.set(wvCencHeader, i);\n\n        // Convert to BASE64 string\n        pssh = String.fromCharCode.apply(null, pssh);\n        pssh = BASE64.encodeASCII(pssh);\n\n        widevineCP.pssh = { __text: pssh };\n\n        return widevineCP;\n    }\n\n    function processManifest(xmlDoc, manifestLoadedTime) {\n        const manifest = {};\n        const contentProtections = [];\n        const smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        const protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            timestampOffset,\n            startTime,\n            segments,\n            timescale,\n            segmentDuration,\n            i, j;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\n        timescale =  smoothStreamingMedia.getAttribute('TimeScale');\n        manifest.timescale = timescale ? parseFloat(timescale) : DEFAULT_TIME_SCALE;\n        let dvrWindowLength = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));\n        // If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite\n        if (manifest.type === 'dynamic' && (dvrWindowLength === 0 || isNaN(dvrWindowLength))) {\n            dvrWindowLength = Infinity;\n        }\n        // Star-over\n        if (dvrWindowLength === 0 && smoothStreamingMedia.getAttribute('CanSeek') === 'TRUE') {\n            dvrWindowLength = Infinity;\n        }\n\n        if (dvrWindowLength > 0) {\n            manifest.timeShiftBufferDepth = dvrWindowLength / manifest.timescale;\n        }\n\n        let duration = parseFloat(smoothStreamingMedia.getAttribute('Duration'));\n        manifest.mediaPresentationDuration = (duration === 0) ? Infinity : duration / manifest.timescale;\n        // By default, set minBufferTime to 2 sec. (but set below according to video segment duration)\n        manifest.minBufferTime = 2;\n        manifest.ttmlTimeIsRelative = true;\n\n        // Live manifest with Duration = start-over\n        if (manifest.type === 'dynamic' && duration > 0) {\n            manifest.type = 'static';\n            // We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline\n            manifest.timeShiftBufferDepth = duration / manifest.timescale;\n            // Duration will be set according to current segment timeline duration (see below)\n        }\n\n        if (manifest.type === 'dynamic'  && manifest.timeShiftBufferDepth < Infinity) {\n            manifest.refreshManifestOnSwitchTrack = true; // Refresh manifest when switching tracks\n            manifest.doNotUpdateDVRWindowOnBufferUpdated = true; // DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes\n            manifest.ignorePostponeTimePeriod = true; // Never update manifest\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia, manifest.timescale);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // Uncomment to test live to static manifests\n        // if (manifest.type !== 'static') {\n        //     manifest.type = 'static';\n        //     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;\n        //     manifest.timeShiftBufferDepth = null;\n        // }\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            // Create ContentProtection for Widevine (as a CENC protection)\n            contentProtection = createWidevineContentProtection(KID);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n\n        for (i = 0; i < adaptations.length; i += 1) {\n            adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n\n            if (adaptations[i].contentType === 'video') {\n                // Get video segment duration\n                segmentDuration = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d / adaptations[i].SegmentTemplate.timescale;\n                // Set minBufferTime\n                manifest.minBufferTime = segmentDuration * 2;\n\n                if (manifest.type === 'dynamic' ) {\n                    // Set availabilityStartTime\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    let endTime = (segments[segments.length - 1].t + segments[segments.length - 1].d) / adaptations[i].SegmentTemplate.timescale * 1000;\n                    manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - endTime);\n\n                    // Match timeShiftBufferDepth to video segment timeline duration\n                    if (manifest.timeShiftBufferDepth > 0 &&\n                        manifest.timeShiftBufferDepth !== Infinity &&\n                        manifest.timeShiftBufferDepth > adaptations[i].SegmentTemplate.SegmentTimeline.duration) {\n                        manifest.timeShiftBufferDepth = adaptations[i].SegmentTemplate.SegmentTimeline.duration;\n                    }\n                }\n            }\n        }\n\n        // Cap minBufferTime to timeShiftBufferDepth\n        manifest.minBufferTime = Math.min(manifest.minBufferTime, (manifest.timeShiftBufferDepth ? manifest.timeShiftBufferDepth : Infinity));\n\n        // In case of live streams:\n        // 1- configure player buffering properties according to target live delay\n        // 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())\n        if (manifest.type === 'dynamic') {\n            let targetLiveDelay = mediaPlayerModel.getLiveDelay();\n            if (!targetLiveDelay) {\n                targetLiveDelay = segmentDuration * settings.get().streaming.liveDelayFragmentCount;\n            }\n            let targetDelayCapping = Math.max(manifest.timeShiftBufferDepth - 10/*END_OF_PLAYLIST_PADDING*/, manifest.timeShiftBufferDepth / 2);\n            let liveDelay = Math.min(targetDelayCapping, targetLiveDelay);\n            // Consider a margin of one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized\n            let bufferTime = liveDelay - segmentDuration;\n            settings.update({\n                'streaming': {\n                    'liveDelay': liveDelay,\n                    'stableBufferTime': bufferTime,\n                    'bufferTimeAtTopQuality': bufferTime,\n                    'bufferTimeAtTopQualityLongForm': bufferTime\n                }\n            });\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        // In case of VOD streams, check if start time is greater than 0\n        // Then determine timestamp offset according to higher audio/video start time\n        // (use case = live stream delinearization)\n        if (manifest.type === 'static') {\n            // In case of start-over stream and manifest reloading (due to track switch)\n            // we consider previous timestampOffset to keep timelines synchronized\n            var prevManifest = manifestModel.getValue();\n            if (prevManifest && prevManifest.timestampOffset) {\n                timestampOffset = prevManifest.timestampOffset;\n            } else {\n                for (i = 0; i < adaptations.length; i++) {\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                        startTime = segments[0].t / adaptations[i].SegmentTemplate.timescale;\n                        if (timestampOffset === undefined) {\n                            timestampOffset = startTime;\n                        }\n                        timestampOffset = Math.min(timestampOffset, startTime);\n                        // Correct content duration according to minimum adaptation's segment timeline duration\n                        // in order to force <video> element sending 'ended' event\n                        manifest.mediaPresentationDuration = Math.min(manifest.mediaPresentationDuration, adaptations[i].SegmentTemplate.SegmentTimeline.duration);\n                    }\n                }\n            }\n            // Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)\n            if (timestampOffset > 0) {\n                manifest.timestampOffset = timestampOffset;\n                for (i = 0; i < adaptations.length; i++) {\n                    segments = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;\n                    for (j = 0; j < segments.length; j++) {\n                        if (!segments[j].tManifest) {\n                            segments[j].tManifest = segments[j].t;\n                        }\n                        segments[j].t -= (timestampOffset * adaptations[i].SegmentTemplate.timescale);\n                    }\n                    if (adaptations[i].contentType === constants.AUDIO || adaptations[i].contentType === constants.VIDEO) {\n                        period.start = Math.max(segments[0].t, period.start);\n                        adaptations[i].SegmentTemplate.presentationTimeOffset = period.start;\n                    }\n                }\n                period.start /= manifest.timescale;\n            }\n        }\n\n        // Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps\n        // and then avoid 'ended' event not being raised\n        manifest.mediaPresentationDuration = Math.floor(manifest.mediaPresentationDuration * 1000) / 1000;\n        period.duration = manifest.mediaPresentationDuration;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            const parser = new window.DOMParser();\n\n            xmlDoc = parser.parseFromString(data, 'text/xml');\n            if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                throw new Error('parsing the manifest failed');\n            }\n        }\n\n        return xmlDoc;\n    }\n\n    function getMatchers() {\n        return null;\n    }\n\n    function getIron() {\n        return null;\n    }\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        logger.info('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: internalParse,\n        getMatchers: getMatchers,\n        getIron: getIron\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default dashjs.FactoryMaker.getClassFactory(MssParser); /* jshint ignore:line */\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when the source is setup and ready.\n         * @event MediaPlayerEvents#SOURCE_INITIALIZED\n         */\n        this.SOURCE_INITIALIZED = 'sourceInitialized';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when a seek operation has been asked.\n         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED\n         */\n        this.PLAYBACK_SEEK_ASKED = 'playbackSeekAsked';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor() {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in milliseconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n"]}