{"version":3,"sources":["../../../../../../src/dash/parser/maps/RepresentationBaseValuesMap.js"],"names":["RepresentationBaseValuesMap","commonProperties","DashConstants","PROFILES","WIDTH","HEIGHT","SAR","FRAMERATE","AUDIO_SAMPLING_RATE","MIME_TYPE","SEGMENT_PROFILES","CODECS","MAXIMUM_SAP_PERIOD","START_WITH_SAP","MAX_PLAYOUT_RATE","CODING_DEPENDENCY","SCAN_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","INBAND_EVENT_STREAM","ADAPTATION_SET","MapNode","REPRESENTATION","SUB_REPRESENTATION"],"mappings":"sEAiCA,mC,gDACA,4D,47BAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;MAMMA,4B,oEACF,sCAAc,mDACV,GAAMC,kBAAmB,CACrBC,wBAAcC,QADO,CACGD,wBAAcE,KADjB,CACwBF,wBAAcG,MADtC,CAC8CH,wBAAcI,GAD5D,CACiEJ,wBAAcK,SAD/E,CAC0FL,wBAAcM,mBADxG,CAC6HN,wBAAcO,SAD3I,CACsJP,wBAAcQ,gBADpK,CACsLR,wBAAcS,MADpM,CAC4MT,wBAAcU,kBAD1N,CAC8OV,wBAAcW,cAD5P,CAC4QX,wBAAcY,gBAD1R,CAC4SZ,wBAAca,iBAD1T,CAC6Ub,wBAAcc,SAD3V,CACsWd,wBAAce,aADpX,CACmYf,wBAAcgB,2BADjZ,CAC8ahB,wBAAciB,kBAD5b,CACgdjB,wBAAckB,kBAD9d,CACkflB,wBAAcmB,qBADhgB,CACuhBnB,wBAAcoB,mBADriB,CAAzB,CADU,6IAKJpB,wBAAcqB,cALV,CAK0BtB,gBAL1B,CAK4C,CAClD,GAAIuB,kBAAJ,CAAYtB,wBAAcuB,cAA1B,CAA0CxB,gBAA1C,CAA4D,CACxD,GAAIuB,kBAAJ,CAAYtB,wBAAcwB,kBAA1B,CAA8CzB,gBAA9C,CADwD,CAA5D,CADkD,CAL5C,GAUb,C,qCAXqCuB,iB,kBAc3BxB,2B","file":"RepresentationBaseValuesMap.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\nimport DashConstants from '../../constants/DashConstants';\n\nclass RepresentationBaseValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.PROFILES, DashConstants.WIDTH, DashConstants.HEIGHT, DashConstants.SAR, DashConstants.FRAMERATE, DashConstants.AUDIO_SAMPLING_RATE, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.MAXIMUM_SAP_PERIOD, DashConstants.START_WITH_SAP, DashConstants.MAX_PLAYOUT_RATE, DashConstants.CODING_DEPENDENCY, DashConstants.SCAN_TYPE, DashConstants.FRAME_PACKING, DashConstants.AUDIO_CHANNEL_CONFIGURATION, DashConstants.CONTENT_PROTECTION, DashConstants.ESSENTIAL_PROPERTY, DashConstants.SUPPLEMENTAL_PROPERTY, DashConstants.INBAND_EVENT_STREAM\n        ];\n\n        super(DashConstants.ADAPTATION_SET, commonProperties, [\n            new MapNode(DashConstants.REPRESENTATION, commonProperties, [\n                new MapNode(DashConstants.SUB_REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default RepresentationBaseValuesMap;\n"]}