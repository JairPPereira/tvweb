{"version":3,"sources":["../../../../../src/dash/parser/objectiron.js"],"names":["ObjectIron","mappers","mergeValues","parentItem","childItem","name","hasOwnProperty","mapProperties","properties","parent","child","i","len","length","property","merge","parentValue","childValue","mapItem","item","node","children","array","v","len2","childNode","run","source","periodMapper","period","periods","Period_asArray","adaptationSets","AdaptationSet_asArray","adaptationSetMapper","adaptationset","__dashjs_factory_name","factory","FactoryMaker","getClassFactory"],"mappings":"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","file":"objectiron.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction ObjectIron(mappers) {\n\n    function mergeValues(parentItem, childItem) {\n        for (let name in parentItem) {\n            if (!childItem.hasOwnProperty(name)) {\n                childItem[name] = parentItem[name];\n            }\n        }\n    }\n\n    function mapProperties(properties, parent, child) {\n        for (let i = 0, len = properties.length; i < len; ++i) {\n            const property = properties[i];\n\n            if (parent[property.name]) {\n                if (child[property.name]) {\n                    // check to see if we should merge\n                    if (property.merge) {\n                        const parentValue = parent[property.name];\n                        const childValue = child[property.name];\n\n                        // complex objects; merge properties\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                            mergeValues(parentValue, childValue);\n                        }\n                        // simple objects; merge them together\n                        else {\n                            child[property.name] = parentValue + childValue;\n                        }\n                    }\n                } else {\n                    // just add the property\n                    child[property.name] = parent[property.name];\n                }\n            }\n        }\n    }\n\n    function mapItem(item, node) {\n        for (let i = 0, len = item.children.length; i < len; ++i) {\n            const childItem = item.children[i];\n\n            const array = node[childItem.name + '_asArray'];\n            if (array) {\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\n                    const childNode = array[v];\n                    mapProperties(item.properties, node, childNode);\n                    mapItem(childItem, childNode);\n                }\n            }\n        }\n    }\n\n    function run(source) {\n\n        if (source === null || typeof source !== 'object') {\n            return source;\n        }\n\n        if ('period' in mappers) {\n            const periodMapper = mappers.period;\n            const periods = source.Period_asArray;\n            for (let i = 0, len = periods.length; i < len; ++i) {\n                const period = periods[i];\n                mapItem(periodMapper, period);\n\n                if ('adaptationset' in mappers) {\n                    const adaptationSets = period.AdaptationSet_asArray;\n                    if (adaptationSets) {\n                        const adaptationSetMapper = mappers.adaptationset;\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return source;\n    }\n\n    return {\n        run: run\n    };\n}\n\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\nexport default factory;\n"]}