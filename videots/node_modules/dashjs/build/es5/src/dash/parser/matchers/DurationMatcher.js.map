{"version":3,"sources":["../../../../../../src/dash/parser/matchers/DurationMatcher.js"],"names":["durationRegex","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","DurationMatcher","attributeList","DashConstants","MIN_BUFFER_TIME","MEDIA_PRESENTATION_DURATION","MINIMUM_UPDATE_PERIOD","TIMESHIFT_BUFFER_DEPTH","MAX_SEGMENT_DURATION","MAX_SUBSEGMENT_DURATION","Constants","SUGGESTED_PRESENTATION_DELAY","START","START_TIME","DURATION","len","length","i","attr","nodeName","test","value","match","exec","str","result","parseFloat","undefined","BaseMatcher"],"mappings":"sEAiCA,2C,wDACA,iE,mDACA,4D,47BAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;GAOA,GAAMA,eAAgB,oFAAtB,CAEA,GAAMC,iBAAkB,IAAM,EAAN,CAAW,EAAX,CAAgB,EAAxC,CACA,GAAMC,kBAAmB,GAAK,EAAL,CAAU,EAAV,CAAe,EAAxC,CACA,GAAMC,gBAAiB,GAAK,EAAL,CAAU,EAAjC,CACA,GAAMC,iBAAkB,GAAK,EAA7B,CACA,GAAMC,gBAAiB,EAAvB,C,GAEMC,gB,gEACF,0BAAc,4JAEN,cAAQ,CACJ,GAAMC,eAAgB,CAClBC,wBAAcC,eADI,CACaD,wBAAcE,2BAD3B,CAElBF,wBAAcG,qBAFI,CAEmBH,wBAAcI,sBAFjC,CAEyDJ,wBAAcK,oBAFvE,CAGlBL,wBAAcM,uBAHI,CAGqBC,oBAAUC,4BAH/B,CAG6DR,wBAAcS,KAH3E,CAIlBF,oBAAUG,UAJQ,CAIIV,wBAAcW,QAJlB,CAAtB,CAMA,GAAMC,KAAMb,cAAcc,MAA1B,CAEA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIF,GAApB,CAAyBE,GAAzB,CAA8B,CAC1B,GAAIC,KAAKC,QAAL,GAAkBjB,cAAce,CAAd,CAAtB,CAAwC,CACpC,MAAOtB,eAAcyB,IAAd,CAAmBF,KAAKG,KAAxB,CAAP,CACH,CACJ,CAED,MAAO,MAAP,CACH,CAlBK,CAmBN,aAAO,CACH;AACA,GAAMC,OAAQ3B,cAAc4B,IAAd,CAAmBC,GAAnB,CAAd,CACA,GAAIC,QAAUC,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4B1B,eAA5B,CACV8B,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4BzB,gBADlB,CAEV6B,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4BxB,cAFlB,CAGV4B,WAAWJ,MAAM,CAAN,GAAY,CAAvB,EAA4BvB,eAHlB,CAIV2B,WAAWJ,MAAM,EAAN,GAAa,CAAxB,EAA6BtB,cAJnB,CAKV0B,WAAWJ,MAAM,EAAN,GAAa,CAAxB,CALJ,CAOA,GAAIA,MAAM,CAAN,IAAaK,SAAjB,CAA4B,CACxBF,OAAS,CAACA,MAAV,CACH,CAED,MAAOA,OAAP,CACH,CAlCK,GAoCb,C,yBArCyBG,qB,kBAwCf3B,e","file":"DurationMatcher.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher';\nimport Constants from '../../../streaming/constants/Constants';\nimport DashConstants from '../../constants/DashConstants';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            attr => {\n                const attributeList = [\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\n                    DashConstants.MAX_SUBSEGMENT_DURATION, Constants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\n                    Constants.START_TIME, DashConstants.DURATION\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attr.nodeName === attributeList[i]) {\n                        return durationRegex.test(attr.value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[3] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[5] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[7] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[9] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[11] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[13] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n"]}