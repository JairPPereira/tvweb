{"version":3,"sources":["../../../../../src/dash/vo/Representation.js"],"names":["Representation","id","index","adaptation","segmentInfoType","initialization","codecs","codecPrivateData","segmentDuration","NaN","timescale","startNumber","indexRange","range","presentationTimeOffset","MSETimeOffset","segmentAvailabilityRange","availableSegmentsNumber","bandwidth","width","height","scanType","maxPlayoutRate","availabilityTimeOffset","availabilityTimeComplete","DashConstants","BASE_URL","SEGMENT_BASE"],"mappings":"okBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;;GAKA,yD,kSAEMA,e,YACF,yBAAc,sCACV,KAAKC,EAAL,CAAU,IAAV,CACA,KAAKC,KAAL,CAAa,CAAC,CAAd,CACA,KAAKC,UAAL,CAAkB,IAAlB,CACA,KAAKC,eAAL,CAAuB,IAAvB,CACA,KAAKC,cAAL,CAAsB,IAAtB,CACA,KAAKC,MAAL,CAAc,IAAd,CACA,KAAKC,gBAAL,CAAwB,IAAxB,CACA,KAAKC,eAAL,CAAuBC,GAAvB,CACA,KAAKC,SAAL,CAAiB,CAAjB,CACA,KAAKC,WAAL,CAAmB,CAAnB,CACA,KAAKC,UAAL,CAAkB,IAAlB,CACA,KAAKC,KAAL,CAAa,IAAb,CACA,KAAKC,sBAAL,CAA8B,CAA9B,CACA;AACA,KAAKC,aAAL,CAAqBN,GAArB,CACA,KAAKO,wBAAL,CAAgC,IAAhC,CACA,KAAKC,uBAAL,CAA+B,CAA/B,CACA,KAAKC,SAAL,CAAiBT,GAAjB,CACA,KAAKU,KAAL,CAAaV,GAAb,CACA,KAAKW,MAAL,CAAcX,GAAd,CACA,KAAKY,QAAL,CAAgB,IAAhB,CACA,KAAKC,cAAL,CAAsBb,GAAtB,CACA,KAAKc,sBAAL,CAA8B,CAA9B,CACA,KAAKC,wBAAL,CAAgC,IAAhC,CACH,C,wFAEmB,CAChB,MAAQ,MAAKnB,cAAL,GAAwB,IAAxB,EAAgC,KAAKQ,KAAL,GAAe,IAAvD,CACH,C,iDAEa,CACV,MAAO,MAAKT,eAAL,GAAyBqB,wBAAcC,QAAvC,EACH,KAAKtB,eAAL,GAAyBqB,wBAAcE,YADpC,EAEH,CAAC,KAAKf,UAFV,CAGH,C,8CAGUZ,c","file":"Representation.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport DashConstants from '../constants/DashConstants';\n\nclass Representation {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.adaptation = null;\n        this.segmentInfoType = null;\n        this.initialization = null;\n        this.codecs = null;\n        this.codecPrivateData = null;\n        this.segmentDuration = NaN;\n        this.timescale = 1;\n        this.startNumber = 1;\n        this.indexRange = null;\n        this.range = null;\n        this.presentationTimeOffset = 0;\n        // Set the source buffer timeOffset to this\n        this.MSETimeOffset = NaN;\n        this.segmentAvailabilityRange = null;\n        this.availableSegmentsNumber = 0;\n        this.bandwidth = NaN;\n        this.width = NaN;\n        this.height = NaN;\n        this.scanType = null;\n        this.maxPlayoutRate = NaN;\n        this.availabilityTimeOffset = 0;\n        this.availabilityTimeComplete = true;\n    }\n\n    hasInitialization() {\n        return (this.initialization !== null || this.range !== null);\n    }\n\n    hasSegments() {\n        return this.segmentInfoType !== DashConstants.BASE_URL &&\n            this.segmentInfoType !== DashConstants.SEGMENT_BASE &&\n            !this.indexRange;\n    }\n}\n\nexport default Representation;\n"]}