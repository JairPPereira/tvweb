{"version":3,"sources":["../../../../../src/dash/models/DashManifestModel.js"],"names":["DashManifestModel","instance","logger","errHandler","BASE64","context","urlUtils","getInstance","isInteger","Number","value","isFinite","Math","floor","setup","getLogger","getIsTypeOf","adaptation","type","i","len","representation","col","mimeTypeRegEx","codecs","result","found","Error","hasOwnProperty","ContentComponent_asArray","Constants","TEXT","RegExp","Representation_asArray","length","essentialProperties","getEssentialPropertiesForRepresentation","THUMBNAILS_SCHEME_ID_URIS","indexOf","schemeIdUri","IMAGE","DashConstants","CODECS","search","STPP","WVTT","FRAGMENTED_TEXT","MUXED","contentType","MIME_TYPE","test","mimeType","getIsAudio","AUDIO","getIsVideo","VIDEO","getIsFragmentedText","getIsMuxed","getIsImage","getIsTextTrack","getLanguageForAdaptation","lang","LANG","replace","getViewpointForAdaptation","VIEWPOINT","Viewpoint","getRolesForAdaptation","ROLE_ASARRAY","Role_asArray","getAccessibilityForAdaptation","ACCESSIBILITY_ASARRAY","Accessibility_asArray","getAudioChannelConfigurationForAdaptation","AUDIOCHANNELCONFIGURATION_ASARRAY","AudioChannelConfiguration_asArray","getAudioChannelConfigurationForRepresentation","getRepresentationSortFunction","a","b","bandwidth","processAdaptation","realAdaptation","Array","isArray","sort","getRealAdaptations","manifest","periodIndex","Period_asArray","AdaptationSet_asArray","getAdaptationForId","id","realAdaptations","ID","getAdaptationForIndex","index","getIndexForAdaptation","objectUtils","areEqual","getAdaptationsForType","adaptations","push","getCodec","representationId","addResolutionInfo","codec","width","undefined","height","getMimeType","getKID","CENC_DEFAULT_KID","getLabelsForAdaptation","Label_asArray","labelArray","text","__text","getContentProtectionData","CONTENTPROTECTION_ASARRAY","ContentProtection_asArray","getIsDynamic","isDynamic","DYNAMIC","hasProfile","profile","has","profiles","getDuration","mpdDuration","MEDIA_PRESENTATION_DURATION","mediaPresentationDuration","POSITIVE_INFINITY","MAX_SAFE_INTEGER","MAX_VALUE","getBandwidth","NaN","getManifestUpdatePeriod","latencyOfLastUpdate","delay","MINIMUM_UPDATE_PERIOD","minimumUpdatePeriod","isNaN","max","getRepresentationCount","getBitrateListForAdaptation","processedRealAdaptation","realRepresentations","map","realRepresentation","scanType","EssentialProperty_asArray","prop","getRepresentationFor","getRealAdaptationFor","voAdaptation","period","periodArray","mpd","isLastRepeatAttributeValid","segmentTimeline","s","S_asArray","r","getUseCalculatedLiveEdgeTimeForAdaptation","segmentInfo","SEGMENT_LIST","SegmentList","SEGMENT_TIMELINE","SegmentTimeline","SEGMENT_TEMPLATE","SegmentTemplate","getRepresentationsForAdaptation","voRepresentations","baseUrl","baseUrls","getBaseURLsFromElement","voRepresentation","Representation","CODEC_PRIVATE_DATA","codecPrivateData","BANDWITH","WIDTH","HEIGHT","SCAN_TYPE","MAX_PLAYOUT_RATE","maxPlayoutRate","SEGMENT_BASE","SegmentBase","segmentInfoType","useCalculatedLiveEdgeTime","INITIALIZATION_MINUS","initialization","split","join","BASE_URL","INITIALIZATION","Initialization","SOURCE_URL","sourceURL","RANGE","range","TIMESCALE","timescale","DURATION","segmentDuration","duration","MEDIA","media","START_NUMBER","startNumber","INDEX_RANGE","indexRange","PRESENTATION_TIME_OFFSET","presentationTimeOffset","AVAILABILITY_TIME_OFFSET","availabilityTimeOffset","AVAILABILITY_TIME_COMPLETE","availabilityTimeComplete","MSETimeOffset","calcMSETimeOffset","path","presentationOffset","periodStart","start","getAdaptationsForPeriod","voPeriod","realPeriod","voAdaptations","voAdaptationSet","realAdaptationSet","AdaptationSet","getRegularPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","START","Period","parseFloat","toFixed","warn","getPeriodId","getEndTimeForLastPeriod","DEFAULT_ID","getMpd","Mpd","AVAILABILITY_START_TIME","availabilityStartTime","Date","getTime","loadedTime","AVAILABILITY_END_TIME","availabilityEndTime","SUGGESTED_PRESENTATION_DELAY","suggestedPresentationDelay","TIMESHIFT_BUFFER_DEPTH","timeShiftBufferDepth","MAX_SEGMENT_DURATION","maxSegmentDuration","checkConfig","MISSING_CONFIG_ERROR","periodEnd","error","DashJSError","Errors","MANIFEST_ERROR_ID_PARSE_CODE","getEventsForPeriod","eventStreams","EventStream_asArray","events","j","eventStream","EventStream","SCHEME_ID_URI","VALUE","Event_asArray","event","Event","presentationTime","PRESENTATION_TIME","Signal","Binary","messageData","decodeArray","toString","getEventStreams","inbandStreams","getEventStreamForAdaptationSet","adaptationArray","InbandEventStream_asArray","getEventStreamForRepresentation","representationArray","getUTCTimingSources","hasAST","utcTimingsArray","UTCTiming_asArray","utcTimingEntries","forEach","utcTiming","entry","UTCTiming","node","entries","BaseURL_asArray","baseUri","earlyReturn","some","BaseURL","isRelative","resolve","url","SERVICE_LOCATION","serviceLocation","DVB_PRIORITY","dvb_priority","DVB_WEIGHT","dvb_weight","getLocation","LOCATION","Location","Location_asArray","getSuggestedPresentationDelay","getAvailabilityStartTime","getServiceDescriptions","serviceDescriptions","SERVICE_DESCRIPTION","ServiceDescription_asArray","sd","latency","playbackRate","SERVICE_DESCRIPTION_SCOPE","SERVICE_DESCRIPTION_LATENCY","target","min","SERVICE_DESCRIPTION_PLAYBACK_RATE","SERVICE_DESCRIPTION_LL_SCHEME","getSupplementalPropperties","supplementalProperties","SUPPLEMENTAL_PROPERTY","SupplementalProperty_asArray","sp","setConfig","config","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"DashManifestModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants';\nimport DashConstants from '../constants/DashConstants';\nimport Representation from '../vo/Representation';\nimport AdaptationSet from '../vo/AdaptationSet';\nimport Period from '../vo/Period';\nimport Mpd from '../vo/Mpd';\nimport UTCTiming from '../vo/UTCTiming';\nimport Event from '../vo/Event';\nimport BaseURL from '../vo/BaseURL';\nimport EventStream from '../vo/EventStream';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils';\nimport URLUtils from '../../streaming/utils/URLUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport DashJSError from '../../streaming/vo/DashJSError';\nimport Errors from '../../core/errors/Errors';\nimport { THUMBNAILS_SCHEME_ID_URIS } from '../../streaming/thumbnail/ThumbnailTracks';\n\nfunction DashManifestModel() {\n    let instance,\n        logger,\n        errHandler,\n        BASE64;\n\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function setup () {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsTypeOf(adaptation, type) {\n\n        let i,\n            len,\n            representation,\n            col,\n            mimeTypeRegEx,\n            codecs;\n        let result = false;\n        let found = false;\n\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        if (adaptation.hasOwnProperty('ContentComponent_asArray')) {\n            col = adaptation.ContentComponent_asArray;\n        }\n\n        mimeTypeRegEx = (type !== Constants.TEXT) ? new RegExp(type) : new RegExp('(vtt|ttml)');\n\n        if (adaptation.Representation_asArray && adaptation.Representation_asArray.length && adaptation.Representation_asArray.length > 0) {\n            let essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);\n            if (essentialProperties && essentialProperties.length > 0 && THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri) >= 0) {\n                return type === Constants.IMAGE;\n            }\n            if (adaptation.Representation_asArray[0].hasOwnProperty(DashConstants.CODECS)) {\n                // Just check the start of the codecs string\n                codecs = adaptation.Representation_asArray[0].codecs;\n                if (codecs.search(Constants.STPP) === 0 || codecs.search(Constants.WVTT) === 0) {\n                    return type === Constants.FRAGMENTED_TEXT;\n                }\n            }\n        }\n\n        if (col) {\n            if (col.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (col[0] && col[0].contentType === type) {\n                result = true;\n                found = true;\n            }\n        }\n\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            result = mimeTypeRegEx.test(adaptation.mimeType);\n            found = true;\n        }\n\n        // couldn't find on adaptationset, so check a representation\n        if (!found) {\n            i = 0;\n            len = adaptation.Representation_asArray && adaptation.Representation_asArray.length ? adaptation.Representation_asArray.length : 0;\n            while (!found && i < len) {\n                representation = adaptation.Representation_asArray[i];\n\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    result = mimeTypeRegEx.test(representation.mimeType);\n                    found = true;\n                }\n\n                i++;\n            }\n        }\n\n        return result;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsFragmentedText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.FRAGMENTED_TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getIsTextTrack(type) {\n        return (type === 'text/vtt' || type === 'application/ttml+xml');\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            //Filter out any other characters not allowed according to RFC5646\n            lang = adaptation.lang.replace(/[^A-Za-z0-9-]/g, '');\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.VIEWPOINT) ? adaptation.Viewpoint : null;\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ROLE_ASARRAY) ? adaptation.Role_asArray : [];\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY_ASARRAY) ? adaptation.Accessibility_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        return adaptation && adaptation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? adaptation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getAudioChannelConfigurationForRepresentation(representation) {\n        return representation && representation.hasOwnProperty(DashConstants.AUDIOCHANNELCONFIGURATION_ASARRAY) ? representation.AudioChannelConfiguration_asArray : [];\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && Array.isArray(realAdaptation.Representation_asArray)) {\n            realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getRealAdaptations(manifest, periodIndex) {\n        return manifest && manifest.Period_asArray && isInteger(periodIndex) ? manifest.Period_asArray[periodIndex] ? manifest.Period_asArray[periodIndex].AdaptationSet_asArray : [] : [];\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        if (realAdaptations.length > 0 && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        if (!realAdaptation) {\n            return -1;\n        }\n\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n\n        for (let i = 0; i < realAdaptations.length; i++) {\n            let objectUtils = ObjectUtils(context).getInstance();\n            if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptations[i], type)) {\n                adaptations.push(processAdaptation(realAdaptations[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getCodec(adaptation, representationId, addResolutionInfo) {\n        let codec = null;\n\n        if (adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0) {\n            const representation = isInteger(representationId) && representationId >= 0 && representationId < adaptation.Representation_asArray.length ?\n                adaptation.Representation_asArray[representationId] : adaptation.Representation_asArray[0];\n            if (representation) {\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n                if (addResolutionInfo && representation.width !== undefined) {\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n                }\n            }\n        }\n\n        return codec;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 ? adaptation.Representation_asArray[0].mimeType : null;\n    }\n\n    function getKID(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CENC_DEFAULT_KID)) {\n            return null;\n        }\n        return adaptation[DashConstants.CENC_DEFAULT_KID];\n    }\n\n    function getLabelsForAdaptation(adaptation) {\n        if (!adaptation || !Array.isArray(adaptation.Label_asArray)) {\n            return [];\n        }\n\n        const labelArray = [];\n\n        for (let i = 0; i < adaptation.Label_asArray.length; i++) {\n            labelArray.push({\n                lang: adaptation.Label_asArray[i].lang,\n                text: adaptation.Label_asArray[i].__text || adaptation.Label_asArray[i]\n            });\n        }\n\n        return labelArray;\n    }\n\n    function getContentProtectionData(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.CONTENTPROTECTION_ASARRAY) || adaptation.ContentProtection_asArray.length === 0) {\n            return null;\n        }\n        return adaptation.ContentProtection_asArray;\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else if (manifest && manifest.type == 'dynamic') {\n            mpdDuration = Number.POSITIVE_INFINITY;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && Array.isArray(adaptation.Representation_asArray) ? adaptation.Representation_asArray.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation && Array.isArray(processedRealAdaptation.Representation_asArray) ? processedRealAdaptation.Representation_asArray : [];\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null\n            };\n        });\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        if (!realRepresentation || ! realRepresentation.EssentialProperty_asArray || !realRepresentation.EssentialProperty_asArray.length) return null;\n\n        return realRepresentation.EssentialProperty_asArray.map( (prop) => {\n            return {\n                schemeIdUri: prop.schemeIdUri,\n                value: prop.value\n            };\n        });\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation_asArray && adaptation.Representation_asArray.length > 0 &&\n            isInteger(index) ? adaptation.Representation_asArray[index] : null;\n    }\n\n    function getRealAdaptationFor(voAdaptation) {\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(voAdaptation.index)) {\n                return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);\n            }\n        }\n    }\n\n    function isLastRepeatAttributeValid(segmentTimeline) {\n        let s = segmentTimeline.S_asArray[segmentTimeline.S_asArray.length - 1];\n        return !s.hasOwnProperty('r') || s.r >= 0;\n    }\n\n    function getUseCalculatedLiveEdgeTimeForAdaptation(voAdaptation) {\n        let realAdaptation = getRealAdaptationFor(voAdaptation);\n        let realRepresentation = realAdaptation && Array.isArray(realAdaptation.Representation_asArray) ? realAdaptation.Representation_asArray[0] : null;\n        let segmentInfo;\n        if (realRepresentation) {\n            if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                segmentInfo = realRepresentation.SegmentList;\n                return segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ?\n                    isLastRepeatAttributeValid(segmentInfo.SegmentTimeline) :\n                    true;\n            } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                segmentInfo = realRepresentation.SegmentTemplate;\n                if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                    return isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                }\n            }\n        }\n\n        return false;\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation) {\n        const voRepresentations = [];\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\n        let segmentInfo,\n            baseUrl;\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation_asArray) {\n            // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\n            // that we are processing. Making it works properly will require much further changes and given\n            // parsing base Urls parameters is needed for our ultra low latency examples, we will\n            // keep this \"tricky\" code until the real (and good) solution comes\n            if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n                const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\n                if (baseUrls) {\n                    baseUrl = baseUrls[0];\n                }\n            }\n            for (let i = 0, len = processedRealAdaptation.Representation_asArray.length; i < len; ++i) {\n                const realRepresentation = processedRealAdaptation.Representation_asArray[i];\n                const voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                        voRepresentation.useCalculatedLiveEdgeTime = true;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                        voRepresentation.useCalculatedLiveEdgeTime = isLastRepeatAttributeValid(segmentInfo.SegmentTimeline);\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        const initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        }\n\n                        if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE) && getIsTextTrack(realRepresentation.mimeType)) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = segmentInfo.startNumber;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\n                    }\n                }\n\n                voRepresentation.MSETimeOffset = calcMSETimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function calcMSETimeOffset(representation) {\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\n        const presentationOffset = representation.presentationTimeOffset;\n        const periodStart = representation.adaptation.period.start;\n        return (periodStart - presentationOffset);\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period_asArray[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet_asArray) {\n            for (i = 0; i < realPeriod.AdaptationSet_asArray.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet_asArray[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsFragmentedText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.FRAGMENTED_TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                } else {\n                    voAdaptationSet.type = Constants.TEXT;\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPreviousPeriod = null;\n        let realPeriod = null;\n        let voPreviousPeriod = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period_asArray ? mpd.manifest.Period_asArray.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period_asArray[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period\n            // element contains a @duration attribute then then this new\n            // Period is also a regular Period. The start time of the new\n            // Period PeriodStart is the sum of the start time of the previous\n            // Period PeriodStart and the value of the attribute @duration\n            // of the previous Period.\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element\n            // is the first in the MPD, and (iii) the MPD@type is 'static',\n            // then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n                if (voPeriod !== null) {\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\n                } else {\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\n                }\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                    voPeriod.duration = realPeriod.duration;\n                }\n\n                voPeriods.push(voPeriod);\n                realPreviousPeriod = realPeriod;\n                voPreviousPeriod = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id;\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                if (manifest.loadedTime) {\n                    mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n                }\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n        }\n\n        return mpd;\n    }\n\n    function checkConfig() {\n        if (!errHandler || !errHandler.hasOwnProperty('error')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        checkConfig();\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period_asArray : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream_asArray : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i].schemeIdUri;\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i].timescale;\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i].value;\n                }\n                for (j = 0; eventStreams[i].Event_asArray && j < eventStreams[i].Event_asArray.length; j++) {\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = eventStreams[i].Event_asArray[j].presentationTime;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = eventStreams[i].Event_asArray[j].duration;\n                    }\n                    if (eventStreams[i].Event_asArray[j].hasOwnProperty(DashConstants.ID)) {\n                        event.id = eventStreams[i].Event_asArray[j].id;\n                    }\n\n                    if (eventStreams[i].Event_asArray[j].Signal && eventStreams[i].Event_asArray[j].Signal.Binary) {\n                        // toString is used to manage both regular and namespaced tags\n                        event.messageData = BASE64.decodeArray(eventStreams[i].Event_asArray[j].Signal.Binary.toString());\n                    } else {\n                        // From Cor.1: 'NOTE: this attribute is an alternative\n                        // to specifying a complete XML element(s) in the Event.\n                        // It is useful when an event leans itself to a compact\n                        // string representation'.\n                        event.messageData =\n                            eventStreams[i].Event_asArray[j].messageData ||\n                            eventStreams[i].Event_asArray[j].__text;\n                    }\n\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) return eventStreams;\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period_asArray && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream_asArray;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period_asArray && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period_asArray[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet_asArray && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet_asArray[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation_asArray && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation_asArray[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream_asArray;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming_asArray : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL_asArray and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL_asArray || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvb_priority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvb_weight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\n                }\n                /* NOTE: byteRange currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(Constants.LOCATION)) {\n            // for now, do not support multiple Locations -\n            // just set Location to the first Location.\n            manifest.Location = manifest.Location_asArray[0];\n\n            return manifest.Location;\n        }\n\n        // may well be undefined\n        return undefined;\n    }\n\n    function getSuggestedPresentationDelay(mpd) {\n        return mpd && mpd.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY) ? mpd.suggestedPresentationDelay : null;\n    }\n\n    function getAvailabilityStartTime(mpd) {\n        return mpd && mpd.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) && mpd.availabilityStartTime !== null ? mpd.availabilityStartTime.getTime() : null;\n    }\n\n    function getServiceDescriptions(manifest) {\n        const serviceDescriptions = [];\n        if (manifest && manifest.hasOwnProperty(DashConstants.SERVICE_DESCRIPTION)) {\n            for (const sd of manifest.ServiceDescription_asArray) {\n                // Convert each of the properties defined in\n                let id, schemeIdUri, latency, playbackRate;\n                for (const prop in sd) {\n                    if (sd.hasOwnProperty(prop)) {\n                        if (prop === DashConstants.ID) {\n                            id = sd[prop];\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_SCOPE) {\n                            schemeIdUri = sd[prop].schemeIdUri;\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_LATENCY) {\n                            latency = {\n                                target: sd[prop].target,\n                                max: sd[prop].max,\n                                min: sd[prop].min\n                            };\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_PLAYBACK_RATE) {\n                            playbackRate = {\n                                max: sd[prop].max,\n                                min: sd[prop].min\n                            };\n                        }\n                    }\n                }\n                // we have a ServiceDescription for low latency. Add it if it really has parameters defined\n                if (schemeIdUri === Constants.SERVICE_DESCRIPTION_LL_SCHEME && (latency || playbackRate)) {\n                    serviceDescriptions.push({\n                        id,\n                        schemeIdUri,\n                        latency,\n                        playbackRate\n                    });\n                }\n            }\n        }\n\n        return serviceDescriptions;\n    }\n\n    function getSupplementalPropperties(adaptation) {\n        const supplementalProperties = {};\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUPPLEMENTAL_PROPERTY)) {\n            for (const sp of adaptation.SupplementalProperty_asArray) {\n                if (sp.hasOwnProperty(Constants.SCHEME_ID_URI) && sp.hasOwnProperty(DashConstants.VALUE)) {\n                    supplementalProperties[sp[Constants.SCHEME_ID_URI]] = sp[DashConstants.VALUE];\n                }\n            }\n        }\n        return supplementalProperties;\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.BASE64) {\n            BASE64 = config.BASE64;\n        }\n    }\n\n    instance = {\n        getIsTypeOf: getIsTypeOf,\n        getIsTextTrack: getIsTextTrack,\n        getLanguageForAdaptation: getLanguageForAdaptation,\n        getViewpointForAdaptation: getViewpointForAdaptation,\n        getRolesForAdaptation: getRolesForAdaptation,\n        getAccessibilityForAdaptation: getAccessibilityForAdaptation,\n        getAudioChannelConfigurationForAdaptation: getAudioChannelConfigurationForAdaptation,\n        getAudioChannelConfigurationForRepresentation: getAudioChannelConfigurationForRepresentation,\n        getAdaptationForIndex: getAdaptationForIndex,\n        getIndexForAdaptation: getIndexForAdaptation,\n        getAdaptationForId: getAdaptationForId,\n        getAdaptationsForType: getAdaptationsForType,\n        getCodec: getCodec,\n        getMimeType: getMimeType,\n        getKID: getKID,\n        getLabelsForAdaptation: getLabelsForAdaptation,\n        getContentProtectionData: getContentProtectionData,\n        getIsDynamic: getIsDynamic,\n        hasProfile: hasProfile,\n        getDuration: getDuration,\n        getBandwidth: getBandwidth,\n        getManifestUpdatePeriod: getManifestUpdatePeriod,\n        getRepresentationCount: getRepresentationCount,\n        getBitrateListForAdaptation: getBitrateListForAdaptation,\n        getRepresentationFor: getRepresentationFor,\n        getRepresentationsForAdaptation: getRepresentationsForAdaptation,\n        getAdaptationsForPeriod: getAdaptationsForPeriod,\n        getRegularPeriods: getRegularPeriods,\n        getMpd: getMpd,\n        getEventsForPeriod: getEventsForPeriod,\n        getEventStreamForAdaptationSet: getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation: getEventStreamForRepresentation,\n        getUTCTimingSources: getUTCTimingSources,\n        getBaseURLsFromElement: getBaseURLsFromElement,\n        getRepresentationSortFunction: getRepresentationSortFunction,\n        getLocation: getLocation,\n        getUseCalculatedLiveEdgeTimeForAdaptation: getUseCalculatedLiveEdgeTimeForAdaptation,\n        getSuggestedPresentationDelay: getSuggestedPresentationDelay,\n        getAvailabilityStartTime: getAvailabilityStartTime,\n        getServiceDescriptions: getServiceDescriptions,\n        getSupplementalPropperties: getSupplementalPropperties,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n"]}