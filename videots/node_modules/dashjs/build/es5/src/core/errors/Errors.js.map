{"version":3,"sources":["../../../../../src/core/errors/Errors.js"],"names":["Errors","MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE","XLINK_LOADER_LOADING_FAILURE_ERROR_CODE","SEGMENTS_UPDATE_FAILED_ERROR_CODE","SEGMENTS_UNAVAILABLE_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_CODE","TIME_SYNC_FAILED_ERROR_CODE","FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","APPEND_ERROR_CODE","REMOVE_ERROR_CODE","DATA_UPDATE_FAILED_ERROR_CODE","CAPABILITY_MEDIASOURCE_ERROR_CODE","CAPABILITY_MEDIAKEYS_ERROR_CODE","DOWNLOAD_ERROR_ID_MANIFEST_CODE","DOWNLOAD_ERROR_ID_SIDX_CODE","DOWNLOAD_ERROR_ID_CONTENT_CODE","DOWNLOAD_ERROR_ID_INITIALIZATION_CODE","DOWNLOAD_ERROR_ID_XLINK_CODE","MANIFEST_ERROR_ID_CODEC_CODE","MANIFEST_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_NOSTREAMS_CODE","TIMED_TEXT_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_MULTIPLEXED_CODE","MEDIASOURCE_TYPE_UNSUPPORTED_CODE","MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE","XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE","SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE","SEGMENTS_UNAVAILABLE_ERROR_MESSAGE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","TIME_SYNC_FAILED_ERROR_MESSAGE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","APPEND_ERROR_MESSAGE","REMOVE_ERROR_MESSAGE","DATA_UPDATE_FAILED_ERROR_MESSAGE","CAPABILITY_MEDIASOURCE_ERROR_MESSAGE","CAPABILITY_MEDIAKEYS_ERROR_MESSAGE","TIMED_TEXT_ERROR_MESSAGE_PARSE","MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE","ErrorsBase","errors"],"mappings":"sEA8BA,yC,u7BA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;MAIMA,O,qDACF,iBAAe,8BAEX;;WAFW,wGAKX,MAAKC,0CAAL,CAAkD,EAAlD,CACA;;WAGA,MAAKC,0CAAL,CAAkD,EAAlD,CACA;;WAGA,MAAKC,uCAAL,CAA+C,EAA/C,CACA;;WAGA,MAAKC,iCAAL,CAAyC,EAAzC,CACA,MAAKC,+BAAL,CAAuC,EAAvC,CACA,MAAKC,8BAAL,CAAsC,EAAtC,CACA,MAAKC,2BAAL,CAAmC,EAAnC,CACA,MAAKC,0CAAL,CAAkD,EAAlD,CACA,MAAKC,uCAAL,CAA+C,EAA/C,CACA,MAAKC,wCAAL,CAAgD,EAAhD,CACA,MAAKC,iBAAL,CAAyB,EAAzB,CACA,MAAKC,iBAAL,CAAyB,EAAzB,CACA,MAAKC,6BAAL,CAAqC,EAArC,CACA;;WAGA,MAAKC,iCAAL,CAAyC,EAAzC,CACA;;WAGA,MAAKC,+BAAL,CAAyC,EAAzC,CAEA,MAAKC,+BAAL,CAAyC,EAAzC,CAEA,MAAKC,2BAAL,CAA8C,EAA9C,CACA,MAAKC,8BAAL,CAA8C,EAA9C,CAEA,MAAKC,qCAAL,CAA8C,EAA9C,CAEA,MAAKC,4BAAL,CAA8C,EAA9C,CAEA,MAAKC,4BAAL,CAA8C,EAA9C,CACA,MAAKC,4BAAL,CAA8C,EAA9C,CAEA;;WAGA,MAAKC,gCAAL,CAA8C,EAA9C,CACA;;WAGA,MAAKC,8BAAL,CAA8C,EAA9C,CACA;;WAGA,MAAKC,kCAAL,CAA8C,EAA9C,CACA;;WAGA,MAAKC,iCAAL,CAAyC,EAAzC,CAEA,MAAKC,6CAAL,CAAqD,qBAArD,CACA,MAAKC,6CAAL,CAAqD,2BAArD,CACA,MAAKC,0CAAL,CAAkD,gCAAlD,CACA,MAAKC,oCAAL,CAA4C,wBAA5C,CACA,MAAKC,kCAAL,CAA0C,+BAA1C,CACA,MAAKC,iCAAL,CAAyC,wBAAzC,CACA,MAAKC,8BAAL,CAAsC,4BAAtC,CACA,MAAKC,0CAAL,CAAkD,iBAAlD,CACA,MAAKC,2CAAL,CAAmD,+BAAnD,CACA,MAAKC,oBAAL,CAA4B,sBAA5B,CACA,MAAKC,oBAAL,CAA4B,uBAA5B,CACA,MAAKC,gCAAL,CAAwC,oBAAxC,CAEA,MAAKC,oCAAL,CAA4C,8BAA5C,CACA,MAAKC,kCAAL,CAA0C,4BAA1C,CACA,MAAKC,8BAAL,CAAsC,iBAAtC,CACA,MAAKC,oCAAL,CAA4C,yCAA5C,CAjFW,aAkFd,C,gBAnFgBC,oB,EAsFrB,GAAIC,QAAS,GAAI5C,OAAJ,EAAb,C,gBACe4C,M","file":"Errors.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from './ErrorsBase';\n/**\n * Errors declaration\n * @class\n */\nclass Errors extends ErrorsBase {\n    constructor () {\n        super();\n        /**\n         * Error code returned when a manifest parsing error occurs\n         */\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10;\n        /**\n         * Error code returned when a manifest loading error occurs\n         */\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11;\n        /**\n         * Error code returned when a xlink loading error occurs\n         */\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12;\n        /**\n         * Error code returned when the update of segments list has failed\n         */\n        this.SEGMENTS_UPDATE_FAILED_ERROR_CODE = 13;\n        this.SEGMENTS_UNAVAILABLE_ERROR_CODE = 14;\n        this.SEGMENT_BASE_LOADER_ERROR_CODE = 15;\n        this.TIME_SYNC_FAILED_ERROR_CODE = 16;\n        this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17;\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18;\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19;\n        this.APPEND_ERROR_CODE = 20;\n        this.REMOVE_ERROR_CODE = 21;\n        this.DATA_UPDATE_FAILED_ERROR_CODE = 22;\n        /**\n         * Error code returned when MediaSource is not supported by the browser\n         */\n        this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23;\n        /**\n         * Error code returned when Protected contents are not supported\n         */\n        this.CAPABILITY_MEDIAKEYS_ERROR_CODE   = 24;\n\n        this.DOWNLOAD_ERROR_ID_MANIFEST_CODE   = 25;\n\n        this.DOWNLOAD_ERROR_ID_SIDX_CODE            = 26;\n        this.DOWNLOAD_ERROR_ID_CONTENT_CODE         = 27;\n\n        this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE  = 28;\n\n        this.DOWNLOAD_ERROR_ID_XLINK_CODE           = 29;\n\n        this.MANIFEST_ERROR_ID_CODEC_CODE           = 30;\n        this.MANIFEST_ERROR_ID_PARSE_CODE           = 31;\n\n        /**\n         * Error code returned when no stream (period) has been detected in the manifest\n         */\n        this.MANIFEST_ERROR_ID_NOSTREAMS_CODE       = 32;\n        /**\n         * Error code returned when something wrong has append during subtitles parsing (TTML or VTT)\n         */\n        this.TIMED_TEXT_ERROR_ID_PARSE_CODE         = 33;\n        /**\n         * Error code returned when a 'muxed' media type has been detected in the manifest. This type is not supported\n         */\n        this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE     = 34;\n        /**\n         * Error code returned when a media source type is not supported\n         */\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35;\n\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = 'parsing failed for ';\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading manifest: ';\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading Xlink element: ';\n        this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = 'Segments update failed';\n        this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = 'no segments are available yet';\n        this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = 'error loading segments';\n        this.TIME_SYNC_FAILED_ERROR_MESSAGE = 'Failed to synchronize time';\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = 'request is null';\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\n        this.APPEND_ERROR_MESSAGE = 'chunk is not defined';\n        this.REMOVE_ERROR_MESSAGE = 'buffer is not defined';\n        this.DATA_UPDATE_FAILED_ERROR_MESSAGE = 'Data update failed';\n\n        this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = 'mediasource is not supported';\n        this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = 'mediakeys is not supported';\n        this.TIMED_TEXT_ERROR_MESSAGE_PARSE = 'parsing error :';\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = 'Error creating source buffer of type : ';\n    }\n}\n\nlet errors = new Errors();\nexport default errors;"]}