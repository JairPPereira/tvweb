{"version":3,"sources":["../../../../src/core/Utils.js"],"names":["Utils","dest","source","copy","s","empty","name","hasOwnProperty","mixin","src","r","Array","i","l","length","push","clone","url","params","modifiedUrl","URL","forEach","param","key","value","searchParams","set","href","e","dt","Date","getTime","uuid","replace","c","Math","random","floor","toString","string","hash","chr","charCodeAt"],"mappings":"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","file":"Utils.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\n\nclass Utils {\n    static mixin(dest, source, copy) {\n        let s;\n        let empty = {};\n        if (dest) {\n            for (let name in source) {\n                if (source.hasOwnProperty(name)) {\n                    s = source[name];\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\n                            dest[name] = Utils.mixin(dest[name], s, copy);\n                        } else {\n                            dest[name] = copy(s);\n                        }\n                    }\n                }\n            }\n        }\n        return dest;\n    }\n\n    static clone(src) {\n        if (!src || typeof src !== 'object') {\n            return src; // anything\n        }\n        let r;\n        if (src instanceof Array) {\n            // array\n            r = [];\n            for (let i = 0, l = src.length; i < l; ++i) {\n                if (i in src) {\n                    r.push(Utils.clone(src[i]));\n                }\n            }\n        } else {\n            r = {};\n        }\n        return Utils.mixin(r, src, Utils.clone);\n    }\n\n    static addAditionalQueryParameterToUrl(url, params) {\n        try {\n            if (!params || params.length === 0) {\n                return url;\n            }\n\n            let modifiedUrl = new URL(url);\n\n            params.forEach((param) => {\n                if (param.key && param.value) {\n                    modifiedUrl.searchParams.set(param.key, param.value);\n                }\n            });\n\n            return modifiedUrl.href;\n\n\n        } catch (e) {\n            return url;\n        }\n    }\n\n    static generateUuid() {\n        let dt = new Date().getTime();\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    static generateHashCode(string) {\n        let hash = 0;\n\n        if (string.length === 0) {\n            return hash;\n        }\n\n        for (let i = 0; i < string.length; i++) {\n            const chr = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0;\n        }\n        return hash;\n    }\n}\n\nexport default Utils;\n"]}