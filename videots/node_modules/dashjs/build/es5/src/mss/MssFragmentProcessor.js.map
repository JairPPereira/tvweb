{"version":3,"sources":["../../../../src/mss/MssFragmentProcessor.js"],"names":["arrayEqual","arr1","arr2","length","every","element","index","saioProcessor","_procFullBox","flags","_procField","_procFieldArray","entry_count","version","saizProcessor","default_sample_info_size","sample_count","sencProcessor","_procEntries","entry","_procEntryField","_procSubEntries","NumberOfEntries","clearAndCryptedData","uuidProcessor","tfxdUserType","tfrfUserType","sepiffUserType","usertype","_parsing","type","fragment_count","call","MssFragmentProcessor","config","context","dashMetrics","playbackController","eventBus","protectionController","ISOBoxer","debug","mssFragmentMoovProcessor","mssFragmentMoofProcessor","instance","setup","addBoxProcessor","create","constants","errHandler","generateMoov","rep","processFragment","e","sp","request","response","Error","convertFragment","trigger","MssEvents","FRAGMENT_INFO_LOADING_COMPLETED","fragmentInfo","streamProcessor","sender","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"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","file":"MssFragmentProcessor.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MSSFragmentMoofProcessor from './MssFragmentMoofProcessor';\nimport MSSFragmentMoovProcessor from './MssFragmentMoovProcessor';\nimport MssEvents from './MssEvents';\n\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType = [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType = [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nfunction MssFragmentProcessor(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const eventBus = config.eventBus;\n    const protectionController = config.protectionController;\n    const ISOBoxer = config.ISOBoxer;\n    const debug = config.debug;\n    let mssFragmentMoovProcessor,\n        mssFragmentMoofProcessor,\n        instance;\n\n    function setup() {\n        ISOBoxer.addBoxProcessor('uuid', uuidProcessor);\n        ISOBoxer.addBoxProcessor('saio', saioProcessor);\n        ISOBoxer.addBoxProcessor('saiz', saizProcessor);\n        ISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n        mssFragmentMoovProcessor = MSSFragmentMoovProcessor(context).create({protectionController: protectionController,\n            constants: config.constants, ISOBoxer: ISOBoxer});\n\n        mssFragmentMoofProcessor = MSSFragmentMoofProcessor(context).create({\n                dashMetrics: dashMetrics,\n                playbackController: playbackController,\n                ISOBoxer: ISOBoxer,\n                eventBus: eventBus,\n                debug: debug,\n                errHandler: config.errHandler\n            });\n    }\n\n    function generateMoov(rep) {\n        return mssFragmentMoovProcessor.generateMoov(rep);\n    }\n\n    function processFragment(e, sp) {\n        if (!e || !e.request || !e.response) {\n            throw new Error('e parameter is missing or malformed');\n        }\n\n        let request = e.request;\n\n        if (request.type === 'MediaSegment') {\n            // it's a MediaSegment, let's convert fragment\n            mssFragmentMoofProcessor.convertFragment(e, sp);\n\n        } else if (request.type === 'FragmentInfoSegment') {\n\n            // it's a FragmentInfo, ask relative fragment info controller to handle it\n            eventBus.trigger(MssEvents.FRAGMENT_INFO_LOADING_COMPLETED, {\n                fragmentInfo: e,\n                streamProcessor: sp\n            });\n\n            // Change the sender value to stop event to be propagated (fragment info must not be added to buffer)\n            e.sender = null;\n        }\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processFragment: processFragment\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor); /* jshint ignore:line */"]}