{"version":3,"sources":["../../../../../src/streaming/controllers/MediaSourceController.js"],"names":["MediaSourceController","instance","logger","context","setup","getInstance","getLogger","createMediaSource","hasWebKit","window","hasMediaSource","MediaSource","WebKitMediaSource","attachMediaSource","source","videoModel","objectURL","URL","createObjectURL","setSource","detachMediaSource","setDuration","value","duration","setSeekable","start","end","setLiveSeekableRange","clearLiveSeekableRange","readyState","signalEndOfStream","buffers","sourceBuffers","i","length","updating","buffered","info","endOfStream","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEA8BA,qD,yDACA,uC,8HA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAiCA,QAASA,sBAAT,EAAiC,CAE7B,GAAIC,gBAAJ,CACIC,aADJ,CAGA,GAAMC,SAAU,KAAKA,OAArB,CAEA,QAASC,MAAT,EAAiB,CACbF,OAAS,oBAAMC,OAAN,EAAeE,WAAf,GAA6BC,SAA7B,CAAuCL,QAAvC,CAAT,CACH,CAED,QAASM,kBAAT,EAA6B,CAEzB,GAAIC,WAAa,qBAAuBC,OAAxC,CACA,GAAIC,gBAAkB,eAAiBD,OAAvC,CAEA,GAAIC,cAAJ,CAAoB,CAChB,MAAO,IAAIC,YAAJ,EAAP,CACH,CAFD,IAEO,IAAIH,SAAJ,CAAe,CAClB,MAAO,IAAII,kBAAJ,EAAP,CACH,CAED,MAAO,KAAP,CACH,CAED,QAASC,kBAAT,CAA2BC,MAA3B,CAAmCC,UAAnC,CAA+C,CAE3C,GAAIC,WAAYP,OAAOQ,GAAP,CAAWC,eAAX,CAA2BJ,MAA3B,CAAhB,CAEAC,WAAWI,SAAX,CAAqBH,SAArB,EAEA,MAAOA,UAAP,CACH,CAED,QAASI,kBAAT,CAA2BL,UAA3B,CAAuC,CACnCA,WAAWI,SAAX,CAAqB,IAArB,EACH,CAED,QAASE,YAAT,CAAqBP,MAArB,CAA6BQ,KAA7B,CAAoC,CAEhC,GAAIR,OAAOS,QAAP,EAAmBD,KAAvB,CACIR,OAAOS,QAAP,CAAkBD,KAAlB,CAEJ,MAAOR,QAAOS,QAAd,CACH,CAED,QAASC,YAAT,CAAqBV,MAArB,CAA6BW,KAA7B,CAAoCC,GAApC,CAAyC,CACrC,GAAIZ,QAAU,MAAOA,QAAOa,oBAAd,GAAuC,UAAjD,EAA+D,MAAOb,QAAOc,sBAAd,GAAyC,UAAxG,EACId,OAAOe,UAAP,GAAsB,MAD1B,EACoCJ,OAAS,CAD7C,EACkDA,MAAQC,GAD9D,CACmE,CAC/DZ,OAAOc,sBAAP,GACAd,OAAOa,oBAAP,CAA4BF,KAA5B,CAAmCC,GAAnC,EACH,CACJ,CAED,QAASI,kBAAT,CAA2BhB,MAA3B,CAAmC,CAC/B,GAAI,CAACA,MAAD,EAAWA,OAAOe,UAAP,GAAsB,MAArC,CAA6C,CACzC,OACH,CAED,GAAIE,SAAUjB,OAAOkB,aAArB,CAEA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIF,QAAQG,MAA5B,CAAoCD,GAApC,CAAyC,CACrC,GAAIF,QAAQE,CAAR,EAAWE,QAAf,CAAyB,CACrB,OACH,CACD,GAAIJ,QAAQE,CAAR,EAAWG,QAAX,CAAoBF,MAApB,GAA+B,CAAnC,CAAsC,CAClC,OACH,CACJ,CACDhC,OAAOmC,IAAP,CAAY,iCAAZ,EACAvB,OAAOwB,WAAP,GACH,CAEDrC,SAAW,CACPM,kBAAmBA,iBADZ,CAEPM,kBAAmBA,iBAFZ,CAGPO,kBAAmBA,iBAHZ,CAIPC,YAAaA,WAJN,CAKPG,YAAaA,WALN,CAMPM,kBAAmBA,iBANZ,CAAX,CASA1B,QAEA,MAAOH,SAAP,CACH,CAEDD,sBAAsBuC,qBAAtB,CAA8C,uBAA9C,C,gBACeC,uBAAaC,mBAAb,CAAiCzC,qBAAjC,C","file":"MediaSourceController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nfunction MediaSourceController() {\n\n    let instance,\n        logger;\n\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function createMediaSource() {\n\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        if (hasMediaSource) {\n            return new MediaSource();\n        } else if (hasWebKit) {\n            return new WebKitMediaSource();\n        }\n\n        return null;\n    }\n\n    function attachMediaSource(source, videoModel) {\n\n        let objectURL = window.URL.createObjectURL(source);\n\n        videoModel.setSource(objectURL);\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(source, value) {\n\n        if (source.duration != value)\n            source.duration = value;\n\n        return source.duration;\n    }\n\n    function setSeekable(source, start, end) {\n        if (source && typeof source.setLiveSeekableRange === 'function' && typeof source.clearLiveSeekableRange === 'function' &&\n                source.readyState === 'open' && start >= 0 && start < end) {\n            source.clearLiveSeekableRange();\n            source.setLiveSeekableRange(start, end);\n        }\n    }\n\n    function signalEndOfStream(source) {\n        if (!source || source.readyState !== 'open') {\n            return;\n        }\n\n        let buffers = source.sourceBuffers;\n\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return;\n            }\n            if (buffers[i].buffered.length === 0) {\n                return;\n            }\n        }\n        logger.info('call to mediaSource endOfStream');\n        source.endOfStream();\n    }\n\n    instance = {\n        createMediaSource: createMediaSource,\n        attachMediaSource: attachMediaSource,\n        detachMediaSource: detachMediaSource,\n        setDuration: setDuration,\n        setSeekable: setSeekable,\n        signalEndOfStream: signalEndOfStream\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n"]}