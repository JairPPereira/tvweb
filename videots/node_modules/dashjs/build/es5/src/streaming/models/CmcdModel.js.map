{"version":3,"sources":["../../../../../src/streaming/models/CmcdModel.js"],"names":["CMCD_REQUEST_FIELD_NAME","CMCD_VERSION","DEFAULT_DEVICE_ID","BUFFER_STATES","DEFAULT","INITIALIZING","SEEKING","RISK","EMPTY","OBJECT_TYPES","MANIFEST","AUDIO","VIDEO","INIT","CAPTION","STREAMING_FORMATS","DASH","MSS","STREAM_TYPES","VOD","LIVE","CmcdModel","logger","dashManifestModel","instance","internalData","abrController","dashMetrics","playbackController","context","eventBus","getInstance","settings","setup","getLogger","_resetInitialSettings","initialize","on","MediaPlayerEvents","PLAYBACK_RATE_CHANGED","_onPlaybackRateChanged","MANIFEST_LOADED","_onManifestLoaded","BUFFER_LEVEL_STATE_CHANGED","_onBufferLevelStateChanged","setConfig","config","pr","nor","st","sf","sid","Utils","generateUuid","bs","audio","video","cid","did","getQueryParameter","request","get","streaming","cmcd","enabled","cmcdData","_getCmcdData","finalPayloadString","_buildFinalString","key","value","e","type","HTTPRequest","MPD_TYPE","_setDefaultContentId","_getCmcdDataForMpd","MEDIA_SEGMENT_TYPE","_getCmcdDataForMediaSegment","INIT_SEGMENT_TYPE","_getCmcdDataForInitSegment","generateHashCode","url","data","_getGenericCmcdData","ot","encodedBitrate","_getBitrateByRequest","d","_getObjectDurationByRequest","mediaType","mtp","_getMeasuredThroughputByType","dl","_getDeadlineByType","_getBufferStateByRequest","br","isNaN","v","quality","bitrateList","mediaInfo","parseInt","bandwidth","duration","Math","round","getThroughputHistory","getSafeAverageThroughput","playbackRate","bufferLevel","getCurrentBufferLevel","isDynamic","getIsDynamic","protocol","state","BUFFER_LOADED","BUFFER_EMPTY","isSeeking","keys","Object","length","reduce","acc","index","reset","off","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEA8BA,6C,iDACA,uD,mEACA,qD,yDACA,uC,2CACA,6C,iDACA,sDACA,sE,mEACA,uC,2CACA,2C,mFAEA,GAAMA,yBAA0B,0BAAhC,CAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCA,GAAMC,cAAe,CAArB,CACA,GAAMC,+BAAgC,+BAAtC,CACA,GAAMC,eAAgB,CAClBC,QAAS,IADS,CAElBC,aAAc,CAFI,CAGlBC,QAAS,CAHS,CAIlBC,KAAM,CAJY,CAKlBC,MAAO,CALW,CAAtB,CAOA,GAAMC,cAAe,CACjBC,SAAU,GADO,CAEjBC,MAAO,GAFU,CAGjBC,MAAO,GAHU,CAIjBC,KAAM,GAJW,CAKjBC,QAAS,GALQ,CAArB,CAOA,GAAMC,mBAAoB,CACtBC,KAAM,GADgB,CAEtBC,IAAK,GAFiB,CAA1B,CAIA,GAAMC,cAAe,CACjBC,IAAK,GADY,CAEjBC,KAAM,GAFW,CAArB,CAKA,QAASC,UAAT,EAAqB,CAEjB,GAAIC,cAAJ,CACIC,wBADJ,CAEIC,eAFJ,CAGIC,mBAHJ,CAIIC,oBAJJ,CAKIC,kBALJ,CAMIC,yBANJ,CAQA,GAAIC,SAAU,KAAKA,OAAnB,CACA,GAAIC,UAAW,uBAASD,OAAT,EAAkBE,WAAlB,EAAf,CACA,GAAIC,UAAW,uBAASH,OAAT,EAAkBE,WAAlB,EAAf,CAEA,QAASE,MAAT,EAAiB,CACbX,OAAS,oBAAMO,OAAN,EAAeE,WAAf,GAA6BG,SAA7B,CAAuCV,QAAvC,CAAT,CACAD,kBAAoB,gCAAkBM,OAAlB,EAA2BE,WAA3B,EAApB,CAEAI,wBACH,CAED,QAASC,WAAT,EAAsB,CAClBN,SAASO,EAAT,CAAYC,4BAAkBC,qBAA9B,CAAqDC,sBAArD,CAA6EhB,QAA7E,EACAM,SAASO,EAAT,CAAYC,4BAAkBG,eAA9B,CAA+CC,iBAA/C,CAAkElB,QAAlE,EACAM,SAASO,EAAT,CAAYC,4BAAkBK,0BAA9B,CAA0DC,0BAA1D,CAAsFpB,QAAtF,EACH,CAED,QAASqB,UAAT,CAAmBC,MAAnB,CAA2B,CACvB,GAAI,CAACA,MAAL,CAAa,OAEb,GAAIA,OAAOpB,aAAX,CAA0B,CACtBA,cAAgBoB,OAAOpB,aAAvB,CACH,CAED,GAAIoB,OAAOnB,WAAX,CAAwB,CACpBA,YAAcmB,OAAOnB,WAArB,CACH,CAED,GAAImB,OAAOlB,kBAAX,CAA+B,CAC3BA,mBAAqBkB,OAAOlB,kBAA5B,CACH,CACJ,CAED,QAASO,sBAAT,EAAiC,CAC7BV,aAAe,CACXsB,GAAI,CADO,CAEXC,IAAK,IAFM,CAGXC,GAAI,IAHO,CAIXC,GAAI,IAJO,CAKXC,OAAQC,gBAAMC,YAAN,EALG,CAMXC,GAAI,CACAC,MAAOpD,cAAcE,YADrB,CAEAmD,MAAOrD,cAAcE,YAFrB,CANO,CAUXoD,IAAK,IAVM,CAWXC,OAAQxD,iBAXG,CAAf,CAcH,CAED,QAASyD,kBAAT,CAA2BC,OAA3B,CAAoC,CAChC,GAAI,CACA,GAAI5B,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,EAAiC/B,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BC,OAAnE,CAA4E,CACxE,GAAMC,UAAWC,aAAaN,OAAb,CAAjB,CACA,GAAMO,oBAAqBC,kBAAkBH,QAAlB,CAA3B,CAEA,MAAO,CACHI,IAAKrE,uBADF,CAEHsE,MAAOH,kBAFJ,CAAP,CAIH,CAED,MAAO,KAAP,CACH,CAAC,MAAOI,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASL,aAAT,CAAsBN,OAAtB,CAA+B,CAC3B,GAAI,CACA,GAAIK,UAAW,IAAf,CAEA,GAAIL,QAAQY,IAAR,GAAiBC,yBAAYC,QAAjC,CAA2C,CACvCC,qBAAqBf,OAArB,EACA,MAAOgB,oBAAmBhB,OAAnB,CAAP,CACH,CAHD,IAGO,IAAIA,QAAQY,IAAR,GAAiBC,yBAAYI,kBAAjC,CAAqD,CACxD,MAAOC,6BAA4BlB,OAA5B,CAAP,CACH,CAFM,IAEA,IAAIA,QAAQY,IAAR,GAAiBC,yBAAYM,iBAAjC,CAAoD,CACvD,MAAOC,4BAA2BpB,OAA3B,CAAP,CACH,CAED,MAAOK,SAAP,CACH,CAAC,MAAOM,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASI,qBAAT,CAA8Bf,OAA9B,CAAuC,CACnC,GAAI,CACAnC,aAAagC,GAAb,IAAsBL,gBAAM6B,gBAAN,CAAuBrB,QAAQsB,GAA/B,CAAtB,CACH,CAAC,MAAOX,CAAP,CAAU,CAEX,CACJ,CAED,QAASK,mBAAT,EAA8B,CAC1B,GAAMO,MAAOC,qBAAb,CAEAD,KAAKE,EAAL,IAAa5E,aAAaC,QAA1B,CAEA,MAAOyE,KAAP,CACH,CAED,QAASL,4BAAT,CAAqClB,OAArC,CAA8C,CAC1C,GAAMuB,MAAOC,qBAAb,CACA,GAAME,gBAAiBC,qBAAqB3B,OAArB,CAAvB,CACA,GAAM4B,GAAIC,4BAA4B7B,OAA5B,CAAV,CACA,GAAMyB,IAAKzB,QAAQ8B,SAAR,GAAsB,OAAtB,IAAmCjF,aAAaG,KAAhD,CAA0DgD,QAAQ8B,SAAR,GAAsB,OAAtB,IAAmCjF,aAAaE,KAAhD,CAA0DiD,QAAQ8B,SAAR,GAAsB,gBAAtB,IAA4CjF,aAAaK,OAAzD,CAAqE,IAApM,CACA,GAAM6E,KAAMC,6BAA6BhC,QAAQ8B,SAArC,CAAZ,CACA,GAAMG,IAAKC,mBAAmBlC,QAAQ8B,SAA3B,CAAX,CACA,GAAMpC,IAAKyC,yBAAyBnC,OAAzB,CAAX,CAEA,GAAI0B,cAAJ,CAAoB,CAChBH,KAAKa,EAAL,CAAUV,cAAV,CACH,CAED,GAAID,EAAJ,CAAQ,CACJF,KAAKE,EAAL,CAAUA,EAAV,CACH,CAED,GAAI,CAACY,MAAMT,CAAN,CAAL,CAAe,CACXL,KAAKK,CAAL,CAASA,CAAT,CACH,CAED,GAAI,CAACS,MAAMN,GAAN,CAAL,CAAiB,CACbR,KAAKQ,GAAL,CAAWA,GAAX,CACH,CAED,GAAI,CAACM,MAAMJ,EAAN,CAAL,CAAgB,CACZV,KAAKU,EAAL,CAAUA,EAAV,CACH,CAED,GAAI,CAACI,MAAM3C,EAAN,CAAD,EAAcA,KAAO,IAAzB,CAA+B,CAC3B6B,KAAK7B,EAAL,CAAUA,EAAV,CACH,CAED,MAAO6B,KAAP,CACH,CAED,QAASH,2BAAT,EAAsC,CAClC,GAAMG,MAAOC,qBAAb,CAEAD,KAAKE,EAAL,IAAa5E,aAAaI,IAA1B,CAEA,MAAOsE,KAAP,CACH,CAED,QAASC,oBAAT,EAA+B,CAC3B,GAAMD,MAAO,EAAb,CAEAA,KAAKe,CAAL,CAASjG,YAAT,CACAkF,KAAKhC,GAAL,CAAWnB,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BZ,GAA9B,CAAoCnB,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BZ,GAAlE,CAAwE1B,aAAa0B,GAAhG,CACAgC,KAAK1B,GAAL,CAAWzB,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BN,GAA9B,CAAoCzB,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BN,GAAlE,CAAwEhC,aAAagC,GAAhG,CACA0B,KAAKzB,GAAL,CAAW1B,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BL,GAA9B,CAAoC1B,SAAS6B,GAAT,GAAeC,SAAf,CAAyBC,IAAzB,CAA8BL,GAAlE,CAAwEjC,aAAaiC,GAAhG,CAEAyB,KAAKhC,GAAL,KAAegC,KAAKhC,GAApB,KACAgC,KAAK1B,GAAL,KAAe0B,KAAK1B,GAApB,KACA0B,KAAKzB,GAAL,KAAeyB,KAAKzB,GAApB,KAEA,GAAI,CAACuC,MAAMxE,aAAasB,EAAnB,CAAD,EAA2BtB,aAAasB,EAAb,GAAoB,CAA/C,EAAoDtB,aAAasB,EAAb,GAAoB,IAA5E,CAAkF,CAC9EoC,KAAKpC,EAAL,CAAUtB,aAAasB,EAAvB,CACH,CAED,GAAItB,aAAawB,EAAjB,CAAqB,CACjBkC,KAAKlC,EAAL,CAAUxB,aAAawB,EAAvB,CACH,CAED,GAAIxB,aAAayB,EAAjB,CAAqB,CACjBiC,KAAKjC,EAAL,CAAUzB,aAAayB,EAAvB,CACH,CAED,MAAOiC,KAAP,CACH,CAED,QAASI,qBAAT,CAA8B3B,OAA9B,CAAuC,CACnC,GAAI,CACA,GAAMuC,SAAUvC,QAAQuC,OAAxB,CACA,GAAMC,aAAcxC,QAAQyC,SAAR,CAAkBD,WAAtC,CAEA,MAAOE,UAASF,YAAYD,OAAZ,EAAqBI,SAArB,CAAiC,IAA1C,CAAP,CACH,CAAC,MAAOhC,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASkB,4BAAT,CAAqC7B,OAArC,CAA8C,CAC1C,GAAI,CACA,MAAO,CAACqC,MAAMrC,QAAQ4C,QAAd,CAAD,CAA2BC,KAAKC,KAAL,CAAW9C,QAAQ4C,QAAR,CAAmB,IAA9B,CAA3B,CAAiE,IAAxE,CACH,CAAC,MAAOjC,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASqB,6BAAT,CAAsCF,SAAtC,CAAiD,CAC7C,GAAI,CACA,MAAOe,MAAKC,KAAL,CAAWhF,cAAciF,oBAAd,GAAqCC,wBAArC,CAA8DlB,SAA9D,CAAX,CAAP,CACH,CAAC,MAAOnB,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASuB,mBAAT,CAA4BJ,SAA5B,CAAuC,CACnC,GAAI,CACA,GAAMmB,cAAepF,aAAasB,EAAlC,CACA,GAAM+D,aAAcnF,YAAYoF,qBAAZ,CAAkCrB,SAAlC,CAA6C,IAA7C,CAApB,CAEA,GAAI,CAACO,MAAMY,YAAN,CAAD,EAAwB,CAACZ,MAAMa,WAAN,CAA7B,CAAiD,CAC7C,MAAOR,UAAUQ,YAAcD,YAAf,CAA+B,IAAxC,CAAP,CACH,CAED,MAAO,KAAP,CACH,CAAC,MAAOtC,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASwB,yBAAT,CAAkCnC,OAAlC,CAA2C,CACvC,GAAI,CACA,GAAM8B,WAAY9B,QAAQ8B,SAA1B,CACA,GAAIjE,aAAa6B,EAAb,CAAgBoC,SAAhB,IAA+B,IAAnC,CAAyC,CACrC,MAAOjE,cAAa6B,EAAb,CAAgBoC,SAAhB,CAAP,CACH,CAED,GAAMoB,aAAcnF,YAAYoF,qBAAZ,CAAkCrB,SAAlC,CAA6C,IAA7C,CAApB,CACA,GAAMc,UAAW5C,QAAQ4C,QAAzB,CACA,GAAIM,YAAcN,QAAlB,CAA4B,CACxB,MAAOrG,eAAcI,IAArB,CACH,CAED,MAAOJ,eAAcC,OAArB,CACH,CAAC,MAAOmE,CAAP,CAAU,CAEX,CACJ,CAED,QAAS/B,uBAAT,CAAgC2C,IAAhC,CAAsC,CAClC,GAAI,CACA1D,aAAasB,EAAb,CAAkBoC,KAAK0B,YAAvB,CACH,CAAC,MAAOtC,CAAP,CAAU,CAEX,CACJ,CAED,QAAS7B,kBAAT,CAA2ByC,IAA3B,CAAiC,CAC7B,GAAI,CACA,GAAM6B,WAAYzF,kBAAkB0F,YAAlB,CAA+B9B,KAAKA,IAApC,CAAlB,CACA,GAAMlC,IAAK+D,aAAe9F,aAAaE,IAA5B,IAAwCF,aAAaC,GAAhE,CACA,GAAM+B,IAAKiC,KAAK+B,QAAL,EAAiB/B,KAAK+B,QAAL,GAAkB,KAAnC,IAA8CnG,kBAAkBE,GAAhE,IAA2EF,kBAAkBC,IAAxG,CAEAS,aAAawB,EAAb,IAAqBA,EAArB,CACAxB,aAAayB,EAAb,IAAqBA,EAArB,CACH,CAAC,MAAOqB,CAAP,CAAU,CACX,CACJ,CAED,QAAS3B,2BAAT,CAAoCuC,IAApC,CAA0C,CACtC,GAAI,CACA,GAAIA,KAAKgC,KAAL,EAAchC,KAAKO,SAAvB,CAAkC,CAC9B,GAAIyB,OAAQ,IAAZ,CACA,OAAQhC,KAAKgC,KAAb,EACI,IAAK7E,6BAAkB8E,aAAvB,CACID,MAAQhH,cAAcC,OAAtB,CACA,MACJ,IAAKkC,6BAAkB+E,YAAvB,CACI,GAAIzF,mBAAmB0F,SAAnB,EAAJ,CAAoC,CAChCH,MAAQhH,cAAcG,OAAtB,CACH,CACD6G,MAAQhH,cAAcK,KAAtB,CACA,MACJ,QAVJ,CAYAiB,aAAa6B,EAAb,CAAgB6B,KAAKO,SAArB,EAAkCyB,KAAlC,CAEH,CACJ,CAAC,MAAO5C,CAAP,CAAU,CAEX,CACJ,CAED,QAASH,kBAAT,CAA2BH,QAA3B,CAAqC,CACjC,GAAI,CACA,GAAI,CAACA,QAAL,CAAe,CACX,MAAO,KAAP,CACH,CACD,GAAMsD,MAAOC,OAAOD,IAAP,CAAYtD,QAAZ,CAAb,CACA,GAAMwD,QAASF,KAAKE,MAApB,CAEA,MAAOF,MAAKG,MAAL,CAAY,SAACC,GAAD,CAAMtD,GAAN,CAAWuD,KAAX,CAAqB,CACpCD,KAAUtD,GAAV,KAAiBJ,SAASI,GAAT,CAAjB,CACA,GAAIuD,MAAQH,OAAS,CAArB,CAAwB,CACpBE,KAAO,GAAP,CACH,CAED,MAAOA,IAAP,CACH,CAPM,CAOJ,EAPI,CAAP,CASH,CAAC,MAAOpD,CAAP,CAAU,CACR,MAAO,KAAP,CACH,CACJ,CAED,QAASsD,MAAT,EAAiB,CACb/F,SAASgG,GAAT,CAAaxF,4BAAkBC,qBAA/B,CAAsDC,sBAAtD,CAA8E,IAA9E,EACAV,SAASgG,GAAT,CAAaxF,4BAAkBG,eAA/B,CAAgDC,iBAAhD,CAAmE,IAAnE,EACAZ,SAASgG,GAAT,CAAaxF,4BAAkBK,0BAA/B,CAA2DC,0BAA3D,CAAuFpB,QAAvF,EAEAW,wBACH,CAEDX,SAAW,CACPmC,mCADO,CAEPd,mBAFO,CAGPgF,WAHO,CAIPzF,qBAJO,CAAX,CAOAH,QAEA,MAAOT,SAAP,CACH,CAEDH,UAAU0G,qBAAV,CAAkC,WAAlC,C,gBACeC,uBAAaC,mBAAb,CAAiC5G,SAAjC,C","file":"CmcdModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Settings from '../../core/Settings';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport DashManifestModel from '../../dash/models/DashManifestModel';\nimport Utils from '../../core/Utils';\nimport {getVersionString} from '../../core/Version';\n\nconst CMCD_REQUEST_FIELD_NAME = 'Common-Media-Client-Data';\nconst CMCD_VERSION = 1;\nconst DEFAULT_DEVICE_ID = `dash.js-v${getVersionString()}`;\nconst BUFFER_STATES = {\n    DEFAULT: null,\n    INITIALIZING: 1,\n    SEEKING: 2,\n    RISK: 3,\n    EMPTY: 4\n};\nconst OBJECT_TYPES = {\n    MANIFEST: 'm',\n    AUDIO: 'a',\n    VIDEO: 'v',\n    INIT: 'i',\n    CAPTION: 'c'\n};\nconst STREAMING_FORMATS = {\n    DASH: 'd',\n    MSS: 's'\n};\nconst STREAM_TYPES = {\n    VOD: 'v',\n    LIVE: 'l'\n};\n\nfunction CmcdModel() {\n\n    let logger,\n        dashManifestModel,\n        instance,\n        internalData,\n        abrController,\n        dashMetrics,\n        playbackController;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    let settings = Settings(context).getInstance();\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        dashManifestModel = DashManifestModel(context).getInstance();\n\n        _resetInitialSettings();\n    }\n\n    function initialize() {\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n    }\n\n    function _resetInitialSettings() {\n        internalData = {\n            pr: 1,\n            nor: null,\n            st: null,\n            sf: null,\n            sid: `${Utils.generateUuid()}`,\n            bs: {\n                audio: BUFFER_STATES.INITIALIZING,\n                video: BUFFER_STATES.INITIALIZING\n            },\n            cid: null,\n            did: `${DEFAULT_DEVICE_ID}`\n\n        };\n    }\n\n    function getQueryParameter(request) {\n        try {\n            if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n                const cmcdData = _getCmcdData(request);\n                const finalPayloadString = _buildFinalString(cmcdData);\n\n                return {\n                    key: CMCD_REQUEST_FIELD_NAME,\n                    value: finalPayloadString\n                };\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getCmcdData(request) {\n        try {\n            let cmcdData = null;\n\n            if (request.type === HTTPRequest.MPD_TYPE) {\n                _setDefaultContentId(request);\n                return _getCmcdDataForMpd(request);\n            } else if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                return _getCmcdDataForMediaSegment(request);\n            } else if (request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n                return _getCmcdDataForInitSegment(request);\n            }\n\n            return cmcdData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _setDefaultContentId(request) {\n        try {\n            internalData.cid = `${Utils.generateHashCode(request.url)}`;\n        } catch (e) {\n\n        }\n    }\n\n    function _getCmcdDataForMpd() {\n        const data = _getGenericCmcdData();\n\n        data.ot = `${OBJECT_TYPES.MANIFEST}`;\n\n        return data;\n    }\n\n    function _getCmcdDataForMediaSegment(request) {\n        const data = _getGenericCmcdData();\n        const encodedBitrate = _getBitrateByRequest(request);\n        const d = _getObjectDurationByRequest(request);\n        const ot = request.mediaType === 'video' ? `${OBJECT_TYPES.VIDEO}` : request.mediaType === 'audio' ? `${OBJECT_TYPES.AUDIO}` : request.mediaType === 'fragmentedText' ? `${OBJECT_TYPES.CAPTION}` : null;\n        const mtp = _getMeasuredThroughputByType(request.mediaType);\n        const dl = _getDeadlineByType(request.mediaType);\n        const bs = _getBufferStateByRequest(request);\n\n        if (encodedBitrate) {\n            data.br = encodedBitrate;\n        }\n\n        if (ot) {\n            data.ot = ot;\n        }\n\n        if (!isNaN(d)) {\n            data.d = d;\n        }\n\n        if (!isNaN(mtp)) {\n            data.mtp = mtp;\n        }\n\n        if (!isNaN(dl)) {\n            data.dl = dl;\n        }\n\n        if (!isNaN(bs) && bs !== null) {\n            data.bs = bs;\n        }\n\n        return data;\n    }\n\n    function _getCmcdDataForInitSegment() {\n        const data = _getGenericCmcdData();\n\n        data.ot = `${OBJECT_TYPES.INIT}`;\n\n        return data;\n    }\n\n    function _getGenericCmcdData() {\n        const data = {};\n\n        data.v = CMCD_VERSION;\n        data.sid = settings.get().streaming.cmcd.sid ? settings.get().streaming.cmcd.sid : internalData.sid;\n        data.cid = settings.get().streaming.cmcd.cid ? settings.get().streaming.cmcd.cid : internalData.cid;\n        data.did = settings.get().streaming.cmcd.did ? settings.get().streaming.cmcd.did : internalData.did;\n\n        data.sid = `\"${data.sid}\"`;\n        data.cid = `\"${data.cid}\"`;\n        data.did = `\"${data.did}\"`;\n\n        if (!isNaN(internalData.pr) && internalData.pr !== 1 && internalData.pr !== null) {\n            data.pr = internalData.pr;\n        }\n\n        if (internalData.st) {\n            data.st = internalData.st;\n        }\n\n        if (internalData.sf) {\n            data.sf = internalData.sf;\n        }\n\n        return data;\n    }\n\n    function _getBitrateByRequest(request) {\n        try {\n            const quality = request.quality;\n            const bitrateList = request.mediaInfo.bitrateList;\n\n            return parseInt(bitrateList[quality].bandwidth / 1000);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getObjectDurationByRequest(request) {\n        try {\n            return !isNaN(request.duration) ? Math.round(request.duration * 1000) : null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getMeasuredThroughputByType(mediaType) {\n        try {\n            return Math.round(abrController.getThroughputHistory().getSafeAverageThroughput(mediaType));\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getDeadlineByType(mediaType) {\n        try {\n            const playbackRate = internalData.pr;\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\n\n            if (!isNaN(playbackRate) && !isNaN(bufferLevel)) {\n                return parseInt((bufferLevel / playbackRate) * 1000);\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getBufferStateByRequest(request) {\n        try {\n            const mediaType = request.mediaType;\n            if (internalData.bs[mediaType] !== null) {\n                return internalData.bs[mediaType];\n            }\n\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\n            const duration = request.duration;\n            if (bufferLevel < duration) {\n                return BUFFER_STATES.RISK;\n            }\n\n            return BUFFER_STATES.DEFAULT;\n        } catch (e) {\n\n        }\n    }\n\n    function _onPlaybackRateChanged(data) {\n        try {\n            internalData.pr = data.playbackRate;\n        } catch (e) {\n\n        }\n    }\n\n    function _onManifestLoaded(data) {\n        try {\n            const isDynamic = dashManifestModel.getIsDynamic(data.data);\n            const st = isDynamic ? `${STREAM_TYPES.LIVE}` : `${STREAM_TYPES.VOD}`;\n            const sf = data.protocol && data.protocol === 'MSS' ? `${STREAMING_FORMATS.MSS}` : `${STREAMING_FORMATS.DASH}`;\n\n            internalData.st = `${st}`;\n            internalData.sf = `${sf}`;\n        } catch (e) {\n        }\n    }\n\n    function _onBufferLevelStateChanged(data) {\n        try {\n            if (data.state && data.mediaType) {\n                let state = null;\n                switch (data.state) {\n                    case MediaPlayerEvents.BUFFER_LOADED:\n                        state = BUFFER_STATES.DEFAULT;\n                        break;\n                    case MediaPlayerEvents.BUFFER_EMPTY:\n                        if (playbackController.isSeeking()) {\n                            state = BUFFER_STATES.SEEKING;\n                        }\n                        state = BUFFER_STATES.EMPTY;\n                        break;\n                    default:\n                }\n                internalData.bs[data.mediaType] = state;\n\n            }\n        } catch (e) {\n\n        }\n    }\n\n    function _buildFinalString(cmcdData) {\n        try {\n            if (!cmcdData) {\n                return null;\n            }\n            const keys = Object.keys(cmcdData);\n            const length = keys.length;\n\n            return keys.reduce((acc, key, index) => {\n                acc += `${key}=${cmcdData[key]}`;\n                if (index < length - 1) {\n                    acc += ',';\n                }\n\n                return acc;\n            }, '');\n\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, this);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n\n        _resetInitialSettings();\n    }\n\n    instance = {\n        getQueryParameter,\n        setConfig,\n        reset,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nCmcdModel.__dashjs_factory_name = 'CmcdModel';\nexport default FactoryMaker.getSingletonFactory(CmcdModel);\n"]}