{"version":3,"sources":["../../../../../src/streaming/utils/Capabilities.js"],"names":["Capabilities","instance","encryptedMediaSupported","setup","supportsMediaSource","hasWebKit","window","hasMediaSource","supportsEncryptedMedia","setEncryptedMediaSupported","value","supportsCodec","codec","MediaSource","isTypeSupported","WebKitMediaSource","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEA8BA,qD,4IAEA,QAASA,aAAT,EAAwB,CAEpB,GAAIC,gBAAJ,CACIC,8BADJ,CAGA,QAASC,MAAT,EAAiB,CACbD,wBAA0B,KAA1B,CACH,CAED,QAASE,oBAAT,EAA+B,CAC3B,GAAIC,WAAa,qBAAuBC,OAAxC,CACA,GAAIC,gBAAkB,eAAiBD,OAAvC,CAEA,MAAQD,YAAaE,cAArB,CACH,CAED;;;;;OAMA,QAASC,uBAAT,EAAkC,CAC9B,MAAON,wBAAP,CACH,CAED,QAASO,2BAAT,CAAoCC,KAApC,CAA2C,CACvCR,wBAA0BQ,KAA1B,CACH,CAED,QAASC,cAAT,CAAuBC,KAAvB,CAA8B,CAC1B,GAAI,eAAiBN,OAAjB,EAA2BO,YAAYC,eAAZ,CAA4BF,KAA5B,CAA/B,CAAmE,CAC/D,MAAO,KAAP,CACH,CAED,GAAI,qBAAuBN,OAAvB,EAAiCS,kBAAkBD,eAAlB,CAAkCF,KAAlC,CAArC,CAA+E,CAC3E,MAAO,KAAP,CACH,CAED,MAAO,MAAP,CACH,CAEDX,SAAW,CACPG,oBAAqBA,mBADd,CAEPI,uBAAwBA,sBAFjB,CAGPG,cAAeA,aAHR,CAIPF,2BAA4BA,0BAJrB,CAAX,CAOAN,QAEA,MAAOF,SAAP,CACH,CApFD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqFAD,aAAagB,qBAAb,CAAqC,cAArC,C,gBACeC,uBAAaC,mBAAb,CAAiClB,YAAjC,C","file":"Capabilities.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    function supportsMediaSource() {\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n\n        return (hasWebKit || hasMediaSource);\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    function supportsCodec(codec) {\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    instance = {\n        supportsMediaSource: supportsMediaSource,\n        supportsEncryptedMedia: supportsEncryptedMedia,\n        supportsCodec: supportsCodec,\n        setEncryptedMediaSupported: setEncryptedMediaSupported\n    };\n\n    setup();\n\n    return instance;\n}\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);"]}