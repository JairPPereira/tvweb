{"version":3,"sources":["../../../../../src/streaming/utils/InitCache.js"],"names":["InitCache","data","save","chunk","id","streamId","representationId","extract","reset","instance","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"sEAmCA,qD,4IAEA,QAASA,UAAT,EAAqB,CAEjB,GAAIC,MAAO,EAAX,CAEA,QAASC,KAAT,CAAeC,KAAf,CAAsB,CAClB,GAAMC,IAAKD,MAAME,QAAjB,CACA,GAAMC,kBAAmBH,MAAMG,gBAA/B,CAEAL,KAAKG,EAAL,EAAWH,KAAKG,EAAL,GAAY,EAAvB,CACAH,KAAKG,EAAL,EAASE,gBAAT,EAA6BH,KAA7B,CACH,CAED,QAASI,QAAT,CAAkBF,QAAlB,CAA4BC,gBAA5B,CAA8C,CAC1C,GAAIL,MAAQA,KAAKI,QAAL,CAAR,EAA0BJ,KAAKI,QAAL,EAAeC,gBAAf,CAA9B,CAAgE,CAC5D,MAAOL,MAAKI,QAAL,EAAeC,gBAAf,CAAP,CACH,CAFD,IAEO,CACH,MAAO,KAAP,CACH,CACJ,CAGD,QAASE,MAAT,EAAkB,CACdP,KAAO,EAAP,CACH,CAED,GAAMQ,UAAW,CACbP,KAAMA,IADO,CAEbK,QAASA,OAFI,CAGbC,MAAOA,KAHM,CAAjB,CAMA,MAAOC,SAAP,CACH,CArED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;GAwCAT,UAAUU,qBAAV,CAAkC,WAAlC,C,gBACeC,uBAAaC,mBAAb,CAAiCZ,SAAjC,C","file":"InitCache.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const representationId = chunk.representationId;\n\n        data[id] = data[id] || {};\n        data[id][representationId] = chunk;\n    }\n\n    function extract (streamId, representationId) {\n        if (data && data[streamId] && data[streamId][representationId]) {\n            return data[streamId][representationId];\n        } else {\n            return null;\n        }\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n"]}