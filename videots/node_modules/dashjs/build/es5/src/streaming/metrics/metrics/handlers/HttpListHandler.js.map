{"version":3,"sources":["../../../../../../../src/streaming/metrics/metrics/handlers/HttpListHandler.js"],"names":["HttpListHandler","config","instance","reportingController","n","type","name","interval","storedVos","handlerHelpers","context","getInstance","metricsConstants","intervalCallback","vos","length","report","initialize","basename","rc","n_ms","requestType","validateN","reconstructFullMetricName","setInterval","reset","clearInterval","handleNewMetric","metric","vo","HTTP_REQUEST","push","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"sEA+BA,0D,gJAEA,QAASA,gBAAT,CAAyBC,MAAzB,CAAiC,CAE7BA,OAASA,QAAU,EAAnB,CACA,GAAIC,gBAAJ,CACIC,0BADJ,CAEIC,QAFJ,CAGIC,WAHJ,CAIIC,WAJJ,CAKIC,eALJ,CAOA,GAAIC,WAAY,EAAhB,CAEA,GAAIC,gBAAiB,6BAAe,KAAKC,OAApB,EAA6BC,WAA7B,EAArB,CAEA,GAAMC,kBAAmBX,OAAOW,gBAAhC,CAEA,QAASC,iBAAT,EAA4B,CACxB,GAAIC,KAAMN,SAAV,CAEA,GAAIM,IAAIC,MAAR,CAAgB,CACZ,GAAIZ,mBAAJ,CAAyB,CACrBA,oBAAoBa,MAApB,CAA2BV,IAA3B,CAAiCQ,GAAjC,EACH,CACJ,CAEDN,UAAY,EAAZ,CACH,CAED,QAASS,WAAT,CAAoBC,QAApB,CAA8BC,EAA9B,CAAkCC,IAAlC,CAAwCC,WAAxC,CAAqD,CACjD,GAAIF,EAAJ,CAAQ,CAEJ;AACA;AACAf,EAAIK,eAAea,SAAf,CAAyBF,IAAzB,CAAJ,CAEAjB,oBAAsBgB,EAAtB,CAEA,GAAIE,aAAeA,YAAYN,MAA/B,CAAuC,CACnCV,KAAOgB,WAAP,CACH,CAEDf,KAAOG,eAAec,yBAAf,CACHL,QADG,CAEHE,IAFG,CAGHC,WAHG,CAAP,CAMAd,SAAWiB,YAAYX,gBAAZ,CAA8BT,CAA9B,CAAX,CACH,CACJ,CAED,QAASqB,MAAT,EAAiB,CACbC,cAAcnB,QAAd,EACAA,SAAW,IAAX,CACAH,EAAI,IAAJ,CACAC,KAAO,IAAP,CACAG,UAAY,EAAZ,CACAL,oBAAsB,IAAtB,CACH,CAED,QAASwB,gBAAT,CAAyBC,MAAzB,CAAiCC,EAAjC,CAAqC,CACjC,GAAID,SAAWhB,iBAAiBkB,YAAhC,CAA8C,CAC1C,GAAI,CAACzB,IAAD,EAAUA,OAASwB,GAAGxB,IAA1B,CAAiC,CAC7BG,UAAUuB,IAAV,CAAeF,EAAf,EACH,CACJ,CACJ,CAED3B,SAAW,CACPe,WAAoBA,UADb,CAEPQ,MAAoBA,KAFb,CAGPE,gBAAoBA,eAHb,CAAX,CAMA,MAAOzB,SAAP,CACH,CA5GD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8GAF,gBAAgBgC,qBAAhB,CAAwC,iBAAxC,C,gBACeC,OAAOC,YAAP,CAAoBC,eAApB,CAAoCnC,eAApC,C,CAAsD","file":"HttpListHandler.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport HandlerHelpers from '../../utils/HandlerHelpers';\n\nfunction HttpListHandler(config) {\n\n    config = config || {};\n    let instance,\n        reportingController,\n        n,\n        type,\n        name,\n        interval;\n\n    let storedVos = [];\n\n    let handlerHelpers = HandlerHelpers(this.context).getInstance();\n\n    const metricsConstants = config.metricsConstants;\n\n    function intervalCallback() {\n        var vos = storedVos;\n\n        if (vos.length) {\n            if (reportingController) {\n                reportingController.report(name, vos);\n            }\n        }\n\n        storedVos = [];\n    }\n\n    function initialize(basename, rc, n_ms, requestType) {\n        if (rc) {\n\n            // this will throw if n is invalid, to be\n            // caught by the initialize caller.\n            n = handlerHelpers.validateN(n_ms);\n\n            reportingController = rc;\n\n            if (requestType && requestType.length) {\n                type = requestType;\n            }\n\n            name = handlerHelpers.reconstructFullMetricName(\n                basename,\n                n_ms,\n                requestType\n            );\n\n            interval = setInterval(intervalCallback, n);\n        }\n    }\n\n    function reset() {\n        clearInterval(interval);\n        interval = null;\n        n = null;\n        type = null;\n        storedVos = [];\n        reportingController = null;\n    }\n\n    function handleNewMetric(metric, vo) {\n        if (metric === metricsConstants.HTTP_REQUEST) {\n            if (!type || (type === vo.type)) {\n                storedVos.push(vo);\n            }\n        }\n    }\n\n    instance = {\n        initialize:         initialize,\n        reset:              reset,\n        handleNewMetric:    handleNewMetric\n    };\n\n    return instance;\n}\n\nHttpListHandler.__dashjs_factory_name = 'HttpListHandler';\nexport default dashjs.FactoryMaker.getClassFactory(HttpListHandler); /* jshint ignore:line */\n"]}