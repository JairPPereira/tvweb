{"version":3,"sources":["../../../../../../src/streaming/metrics/vo/DVBErrors.js"],"names":["DVBErrors","mpdurl","errorcode","terror","url","ipaddress","servicelocation","SSL_CONNECTION_FAILED_PREFIX","DNS_RESOLUTION_FAILED","HOST_UNREACHABLE","CONNECTION_REFUSED","CONNECTION_ERROR","CORRUPT_MEDIA_ISOBMFF","CORRUPT_MEDIA_OTHER","BASE_URL_CHANGED","BECAME_REPORTER"],"mappings":"uNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BA;;;MAIMA,U,CACF,oBAAc,iCACV,KAAKC,MAAL,CAAc,IAAd,CACA;AACA;AAEA,KAAKC,SAAL,CAAiB,IAAjB,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAKC,MAAL,CAAc,IAAd,CACA;AACA;AAEA,KAAKC,GAAL,CAAW,IAAX,CACA;AACA;AACA;AACA;AACA;AAEA,KAAKC,SAAL,CAAiB,IAAjB,CACA;AACA;AACA;AACA;AACA;AAEA,KAAKC,eAAL,CAAuB,IAAvB,CACA;AACA;AACA;AACA;AACH,C,CAGLN,UAAUO,4BAAV,CAAyC,KAAzC,CACAP,UAAUQ,qBAAV,CAAyC,KAAzC,CACAR,UAAUS,gBAAV,CAAyC,KAAzC,CACAT,UAAUU,kBAAV,CAAyC,KAAzC,CACAV,UAAUW,gBAAV,CAAyC,KAAzC,CACAX,UAAUY,qBAAV,CAAyC,KAAzC,CACAZ,UAAUa,mBAAV,CAAyC,KAAzC,CACAb,UAAUc,gBAAV,CAAyC,KAAzC,CACAd,UAAUe,eAAV,CAAyC,KAAzC,C,gBAEef,S","file":"DVBErrors.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DVBErrors {\n    constructor() {\n        this.mpdurl = null;\n        // String - Absolute URL from which the MPD was originally\n        // retrieved (MPD updates will not change this value).\n\n        this.errorcode = null;\n        // String - The value of errorcode depends upon the type\n        // of error being reported. For an error listed in the\n        // ErrorType column below the value is as described in the\n        // Value column.\n        //\n        // ErrorType                                            Value\n        // ---------                                            -----\n        // HTTP error status code                               HTTP status code\n        // Unknown HTTP status code                             HTTP status code\n        // SSL connection failed                                \"SSL\" followed by SSL alert value\n        // DNS resolution failed                                \"C00\"\n        // Host unreachable                                     \"C01\"\n        // Connection refused                                   \"C02\"\n        // Connection error – Not otherwise specified           \"C03\"\n        // Corrupt media – ISO BMFF container cannot be parsed  \"M00\"\n        // Corrupt media – Not otherwise specified              \"M01\"\n        // Changing Base URL in use due to errors               \"F00\"\n        // Becoming an error reporting Player                   \"S00\"\n\n        this.terror = null;\n        // Real-Time - Date and time at which error occurred in UTC,\n        // formatted as a combined date and time according to ISO 8601.\n\n        this.url = null;\n        // String - Absolute URL from which data was being requested\n        // when this error occurred. If the error report is in relation\n        // to corrupt media or changing BaseURL, this may be a null\n        // string if the URL from which the media was obtained or\n        // which led to the change of BaseURL is no longer known.\n\n        this.ipaddress = null;\n        // String - IP Address which the host name in \"url\" resolved to.\n        // If the error report is in relation to corrupt media or\n        // changing BaseURL, this may be a null string if the URL\n        // from which the media was obtained or which led to the\n        // change of BaseURL is no longer known.\n\n        this.servicelocation = null;\n        // String - The value of the serviceLocation field in the\n        // BaseURL being used. In the event of this report indicating\n        // a change of BaseURL this is the value from the BaseURL\n        // being moved from.\n    }\n}\n\nDVBErrors.SSL_CONNECTION_FAILED_PREFIX = 'SSL';\nDVBErrors.DNS_RESOLUTION_FAILED =        'C00';\nDVBErrors.HOST_UNREACHABLE =             'C01';\nDVBErrors.CONNECTION_REFUSED =           'C02';\nDVBErrors.CONNECTION_ERROR =             'C03';\nDVBErrors.CORRUPT_MEDIA_ISOBMFF =        'M00';\nDVBErrors.CORRUPT_MEDIA_OTHER =          'M01';\nDVBErrors.BASE_URL_CHANGED =             'F00';\nDVBErrors.BECAME_REPORTER =              'S00';\n\nexport default DVBErrors;\n"]}