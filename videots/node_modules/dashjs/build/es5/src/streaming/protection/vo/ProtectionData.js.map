{"version":3,"sources":["../../../../../../src/streaming/protection/vo/ProtectionData.js"],"names":["ProtectionData","serverURL","httpRequestHeaders","clearkeys","priority","undefined"],"mappings":"uNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;MAKMA,e,CACF;;;;;;;;;;;;;OAcA,wBAAYC,SAAZ,CAAuBC,kBAAvB,CAA2CC,SAA3C,CAAsDC,QAAtD,CAAgE,sCAC5D,KAAKH,SAAL,CAAiBA,SAAjB,CACA,KAAKC,kBAAL,CAA0BA,kBAA1B,CACA,KAAKC,SAAL,CAAiBA,SAAjB,CACA,KAAKC,QAAL,CAAgBA,WAAaC,SAAb,CAAyB,CAAC,CAA1B,CAA8BD,QAA9C,CACH,C,CAGL;;;;;;;;GAUA;;;;;;;;;;GAYA;;;;;;;;GAUA;;;;;;;;mBAUeJ,c","file":"ProtectionData.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc Data provided for a particular piece of content to customize license server URLs,\n *  license server HTTP request headers, clearkeys, or other content-specific data\n * @ignore\n */\nclass ProtectionData {\n    /**\n     * @param {string|Object} serverURL a license server URL to use with this key system.\n     * When specified as a string, a single URL will be used regardless of message type.\n     * When specified as an object, the object will have property names for each message\n     * type ({@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|message\n     * types defined here)} with the corresponding property value being the URL to use for\n     * messages of that type\n     * @param {Object} httpRequestHeaders headers to add to the http request\n     * @param {Object} clearkeys defines a set of clear keys that are available to\n     * the key system.  Object properties are base64-encoded keyIDs (with no padding).\n     * Corresponding property values are keys, base64-encoded (no padding).\n     * @param {number|undefined} priority priority order of the current ProtectionData\n     * @class\n     */\n    constructor(serverURL, httpRequestHeaders, clearkeys, priority) {\n        this.serverURL = serverURL;\n        this.httpRequestHeaders = httpRequestHeaders;\n        this.clearkeys = clearkeys;\n        this.priority = priority === undefined ? -1 : priority;\n    }\n}\n\n/**\n * License server URL\n *\n * @instance\n * @type string|Object\n * @name ProtectionData.serverURL\n * @readonly\n * @memberof ProtectionData\n */\n\n/**\n * HTTP Request Headers for use in license requests.  Each property name\n * in the object is a header name with its corresponding header value being\n * the property value\n *\n * @instance\n * @type Object\n * @name ProtectionData.httpRequestsHeaders\n * @readonly\n * @memberof ProtectionData\n */\n\n/**\n * ClearKey key-pairs that can be used to decrypt the content\n *\n * @instance\n * @type Object\n * @name ProtectionData.clearkeys\n * @readonly\n * @memberof ProtectionData\n */\n\n/**\n * priority\n *\n * @instance\n * @type Object\n * @name ProtectionData.priority\n * @readonly\n * @memberof ProtectionData\n */\n\nexport default ProtectionData;\n"]}