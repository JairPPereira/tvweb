{"version":3,"sources":["../../../../../../src/streaming/protection/servers/LicenseServer.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA;;;;;;;;;;;;;;GAiBA;;;;;;;;;;;;GAcA;;;;;;;;;GAWA;;;;;;;;;;;GAaA;;;;;;;;;;;;;GAeA","file":"LicenseServer.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Defines the public interface for license server implementations supported\n * by the player.\n *\n * Different license servers have different requirements regarding the methods\n * used to request DRM licenses.  Things like request headers, license response\n * formats (for both error and success cases) need to be customized for a\n * specific server implementation\n *\n * License servers handle requests for more than just initial license retrieval.\n * Each API takes a parameter which describes the message type as supported by\n * the Encrypted Media Extensions.\n *\n * @interface\n */\n\n\n/**\n * Returns a new or updated license server URL based on the requirements of the\n * license server and possibly from information passed in the CDM license message\n *\n * @function\n * @name LicenseServer#getServerURLFromMessage\n * @param {?string} url the initially established URL (from ProtectionData or initData)\n * @param {ArrayBuffer} message the CDM message which may be needed to generate the license\n * requests URL\n * @param {string} messageType the message type associated with this request.  Supported\n * message types can be found {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n * @returns {string} the URL to use in license requests\n */\n\n/**\n * Returns the HTTP method to be used (i.e. \"GET\", \"POST\", etc.) in\n * XMLHttpRequest.open().\n *\n * @function\n * @name LicenseServer#getHTTPMethod\n * @param {string} messageType the message type associated with this request.  Supported\n * message types can be found {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n * @returns {string} the HTTP method\n */\n\n/**\n * Returns the response type to set for XMLHttpRequest.responseType\n *\n * @function\n * @name LicenseServer#getResponseType\n * @param {string} keySystemStr the key system string representing the key system\n * associated with a license request.  Multi-DRM license servers may have different\n * response types depending on the key system.\n * @param {string} messageType the message type associated with this request.  Supported\n * message types can be found {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n * @returns {string} the response type\n */\n\n/**\n * Parses the license server response for any message intended for\n * the CDM.\n *\n * @function\n * @name LicenseServer#getLicenseMessage\n * @param {Object} serverResponse the response as returned in XMLHttpRequest.response\n * @param {string} keySystemStr the key system string representing the key system\n * associated with a license request.\n * @param {string} messageType the message type associated with this request.  Supported\n * message types can be found {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n * @returns {ArrayBuffer} message that will be sent to the CDM or null if no CDM message\n * was present in the response.\n */\n\n/**\n * Parses the license server response during error conditions and returns a\n * string to display for debugging purposes\n *\n * @function\n * @name LicenseServer#getErrorResponse\n * @param {Object} serverResponse the server response\n * @param {string} messageType the message type associated with this request.  Supported\n * message types can be found {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\n * @returns {string} an error message that indicates the reason for the failure\n */\n"]}