{"version":3,"sources":["../../../../../../src/streaming/protection/models/ProtectionModel_3Feb2014.js"],"names":["ProtectionModel_3Feb2014","config","context","eventBus","events","debug","api","instance","logger","videoElement","keySystem","mediaKeys","keySystemAccess","sessions","eventHandler","protectionKeyController","setup","getLogger","getInstance","createEventHandler","reset","i","length","closeKeySession","removeEventListener","needkey","trigger","TEARDOWN_COMPLETE","error","message","getKeySystem","getAllInitData","retVal","push","initData","requestKeySystemAccess","ksConfigurations","found","ksIdx","systemString","ks","configs","supportedAudio","supportedVideo","configIdx","audios","audioCapabilities","videos","videoCapabilities","audioIdx","window","MediaKeys","isTypeSupported","contentType","videoIdx","ksConfig","KeySystemConfiguration","getKeySystemBySystemString","KEY_SYSTEM_ACCESS_COMPLETE","data","KeySystemAccess","selectKeySystem","ksAccess","setMediaKeys","INTERNAL_KEY_SYSTEM_SELECTED","setMediaElement","mediaElement","addEventListener","createKeySession","protData","sessionType","cdmData","Error","capabilities","ksConfiguration","session","createSession","Uint8Array","sessionToken","createSessionToken","ready","close","getSessionID","KEY_SESSION_CREATED","updateKeySession","isClearKey","update","toJWK","splice","release","setServerCertificate","loadKeySession","removeKeySession","handleEvent","event","type","ArrayBuffer","isView","buffer","NEED_KEY","key","NeedKey","boundDoSetKeys","doSetKeys","VIDEO_ELEMENT_SELECTED","readyState","bind","keySession","sessionId","getExpirationTime","NaN","getSessionType","errorStr","KEY_ERROR","DashJSError","ProtectionErrors","MEDIA_KEYERR_CODE","INTERNAL_KEY_MESSAGE","KeyMessage","destinationURL","KEY_ADDED","KEY_SESSION_CLOSED","stop","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"mappings":"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","file":"ProtectionModel_3Feb2014.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\n *\n * Implemented by Internet Explorer 11 (Windows 8.1)\n *\n * @implements ProtectionModel\n * @class\n */\n\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\nimport NeedKey from '../vo/NeedKey';\nimport DashJSError from '../../vo/DashJSError';\nimport ProtectionErrors from '../errors/ProtectionErrors';\nimport KeyMessage from '../vo/KeyMessage';\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\nimport KeySystemAccess from '../vo/KeySystemAccess';\n\nfunction ProtectionModel_3Feb2014(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\n    const events = config.events;\n    const debug = config.debug;\n    const api = config.api;\n\n    let instance,\n        logger,\n        videoElement,\n        keySystem,\n        mediaKeys,\n        keySystemAccess,\n        sessions,\n        eventHandler,\n        protectionKeyController;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        videoElement = null;\n        keySystem = null;\n        mediaKeys = null;\n        keySystemAccess = null;\n        sessions = [];\n        protectionKeyController = ProtectionKeyController(context).getInstance();\n        eventHandler = createEventHandler();\n    }\n\n    function reset() {\n        try {\n            for (let i = 0; i < sessions.length; i++) {\n                closeKeySession(sessions[i]);\n            }\n            if (videoElement) {\n                videoElement.removeEventListener(api.needkey, eventHandler);\n            }\n            eventBus.trigger(events.TEARDOWN_COMPLETE);\n        } catch (error) {\n            eventBus.trigger(events.TEARDOWN_COMPLETE, { error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message });\n        }\n    }\n\n    function getKeySystem() {\n        return keySystem;\n    }\n\n    function getAllInitData() {\n        const retVal = [];\n        for (let i = 0; i < sessions.length; i++) {\n            retVal.push(sessions[i].initData);\n        }\n        return retVal;\n    }\n\n    function requestKeySystemAccess(ksConfigurations) {\n\n        // Try key systems in order, first one with supported key system configuration\n        // is used\n        let found = false;\n        for (let ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\n            const systemString = ksConfigurations[ksIdx].ks.systemString;\n            const configs = ksConfigurations[ksIdx].configs;\n            let supportedAudio = null;\n            let supportedVideo = null;\n\n            // Try key system configs in order, first one with supported audio/video\n            // is used\n            for (let configIdx = 0; configIdx < configs.length; configIdx++) {\n                const audios = configs[configIdx].audioCapabilities;\n                const videos = configs[configIdx].videoCapabilities;\n\n                // Look for supported audio container/codecs\n                if (audios && audios.length !== 0) {\n                    supportedAudio = []; // Indicates that we have a requested audio config\n                    for (let audioIdx = 0; audioIdx < audios.length; audioIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\n                            supportedAudio.push(audios[audioIdx]);\n                        }\n                    }\n                }\n\n                // Look for supported video container/codecs\n                if (videos && videos.length !== 0) {\n                    supportedVideo = []; // Indicates that we have a requested video config\n                    for (let videoIdx = 0; videoIdx < videos.length; videoIdx++) {\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\n                            supportedVideo.push(videos[videoIdx]);\n                        }\n                    }\n                }\n\n                // No supported audio or video in this configuration OR we have\n                // requested audio or video configuration that is not supported\n                if ((!supportedAudio && !supportedVideo) ||\n                    (supportedAudio && supportedAudio.length === 0) ||\n                    (supportedVideo && supportedVideo.length === 0)) {\n                    continue;\n                }\n\n                // This configuration is supported\n                found = true;\n                const ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\n                const ks = protectionKeyController.getKeySystemBySystemString(systemString);\n                eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\n                break;\n            }\n        }\n        if (!found) {\n            eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE, { error: 'Key system access denied! -- No valid audio/video content configurations detected!' });\n        }\n    }\n\n    function selectKeySystem(ksAccess) {\n        try {\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\n            keySystem = ksAccess.keySystem;\n            keySystemAccess = ksAccess;\n            if (videoElement) {\n                setMediaKeys();\n            }\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);\n        } catch (error) {\n            eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED, { error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO' });\n        }\n    }\n\n    function setMediaElement(mediaElement) {\n        if (videoElement === mediaElement)\n            return;\n\n        // Replacing the previous element\n        if (videoElement) {\n            videoElement.removeEventListener(api.needkey, eventHandler);\n        }\n\n        videoElement = mediaElement;\n\n        // Only if we are not detaching from the existing element\n        if (videoElement) {\n            videoElement.addEventListener(api.needkey, eventHandler);\n            if (mediaKeys) {\n                setMediaKeys();\n            }\n        }\n    }\n\n    function createKeySession(initData, protData, sessionType, cdmData) {\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\n            throw new Error('Can not create sessions until you have selected a key system');\n        }\n\n        // Use the first video capability for the contentType.\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\n\n        // If player is trying to playback Audio only stream - don't error out.\n        let capabilities = null;\n\n        if (keySystemAccess.ksConfiguration.videoCapabilities && keySystemAccess.ksConfiguration.videoCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\n        }\n\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities && keySystemAccess.ksConfiguration.audioCapabilities.length > 0) {\n            capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\n        }\n\n        if (capabilities === null) {\n            throw new Error('Can not create sessions for unknown content types.');\n        }\n\n        const contentType = capabilities.contentType;\n        const session = mediaKeys.createSession(contentType, new Uint8Array(initData), cdmData ? new Uint8Array(cdmData) : null);\n        const sessionToken = createSessionToken(session, initData);\n\n        // Add all event listeners\n        session.addEventListener(api.error, sessionToken);\n        session.addEventListener(api.message, sessionToken);\n        session.addEventListener(api.ready, sessionToken);\n        session.addEventListener(api.close, sessionToken);\n\n        // Add to our session list\n        sessions.push(sessionToken);\n        logger.debug('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\n        eventBus.trigger(events.KEY_SESSION_CREATED, { data: sessionToken });\n    }\n\n    function updateKeySession(sessionToken, message) {\n        const session = sessionToken.session;\n\n        if (!protectionKeyController.isClearKey(keySystem)) {\n            // Send our request to the key session\n            session.update(new Uint8Array(message));\n        } else {\n            // For clearkey, message is a ClearKeyKeySet\n            session.update(new Uint8Array(message.toJWK()));\n        }\n    }\n\n    /**\n     * Close the given session and release all associated keys.  Following\n     * this call, the sessionToken becomes invalid\n     *\n     * @param {Object} sessionToken - the session token\n     */\n    function closeKeySession(sessionToken) {\n        const session = sessionToken.session;\n\n        // Remove event listeners\n        session.removeEventListener(api.error, sessionToken);\n        session.removeEventListener(api.message, sessionToken);\n        session.removeEventListener(api.ready, sessionToken);\n        session.removeEventListener(api.close, sessionToken);\n\n        // Remove from our session list\n        for (let i = 0; i < sessions.length; i++) {\n            if (sessions[i] === sessionToken) {\n                sessions.splice(i, 1);\n                break;\n            }\n        }\n\n        // Send our request to the key session\n        session[api.release]();\n    }\n\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\n\n\n    function createEventHandler() {\n        return {\n            handleEvent: function (event) {\n                switch (event.type) {\n\n                    case api.needkey:\n                        if (event.initData) {\n                            const initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\n                            eventBus.trigger(events.NEED_KEY, { key: new NeedKey(initData, 'cenc') });\n                        }\n                        break;\n                }\n            }\n        };\n    }\n\n\n    // IE11 does not let you set MediaKeys until it has entered a certain\n    // readyState, so we need this logic to ensure we don't set the keys\n    // too early\n    function setMediaKeys() {\n        let boundDoSetKeys = null;\n        const doSetKeys = function () {\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\n            videoElement[api.setMediaKeys](mediaKeys);\n            eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);\n        };\n        if (videoElement.readyState >= 1) {\n            doSetKeys();\n        } else {\n            boundDoSetKeys = doSetKeys.bind(this);\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\n        }\n\n    }\n\n    // Function to create our session token objects which manage the EME\n    // MediaKeySession and session-specific event handler\n    function createSessionToken(keySession, initData) {\n        return {\n            // Implements SessionToken\n            session: keySession,\n            initData: initData,\n\n            getSessionID: function () {\n                return this.session.sessionId;\n            },\n\n            getExpirationTime: function () {\n                return NaN;\n            },\n\n            getSessionType: function () {\n                return 'temporary';\n            },\n            // This is our main event handler for all desired MediaKeySession events\n            // These events are translated into our API-independent versions of the\n            // same events\n            handleEvent: function (event) {\n                switch (event.type) {\n                    case api.error:\n                        let errorStr = 'KeyError'; // TODO: Make better string from event\n                        eventBus.trigger(events.KEY_ERROR, { data: new DashJSError(ProtectionErrors.MEDIA_KEYERR_CODE, errorStr, this) });\n                        break;\n                    case api.message:\n                        let message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\n                        eventBus.trigger(events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\n                        break;\n                    case api.ready:\n                        logger.debug('DRM: Key added.');\n                        eventBus.trigger(events.KEY_ADDED);\n                        break;\n\n                    case api.close:\n                        logger.debug('DRM: Session closed.  SessionID = ' + this.getSessionID());\n                        eventBus.trigger(events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\n                        break;\n                }\n            }\n        };\n    }\n\n    instance = {\n        getAllInitData: getAllInitData,\n        requestKeySystemAccess: requestKeySystemAccess,\n        getKeySystem: getKeySystem,\n        selectKeySystem: selectKeySystem,\n        setMediaElement: setMediaElement,\n        createKeySession: createKeySession,\n        updateKeySession: updateKeySession,\n        closeKeySession: closeKeySession,\n        setServerCertificate: setServerCertificate,\n        loadKeySession: loadKeySession,\n        removeKeySession: removeKeySession,\n        stop: reset,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\nexport default dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014); /* jshint ignore:line */\n"]}