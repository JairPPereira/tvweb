{"version":3,"sources":["../../../../../src/streaming/vo/FragmentRequest.js"],"names":["FragmentRequest","action","ACTION_DOWNLOAD","startTime","NaN","mediaType","mediaInfo","type","duration","timescale","range","url","serviceLocation","requestStartDate","firstByteDate","requestEndDate","quality","index","availabilityStartTime","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","representationId","HTTPRequest","INIT_SEGMENT_TYPE","info","init","MEDIA_SEGMENT_TYPE","start","end","ACTION_COMPLETE"],"mappings":"okBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BA,sD,iJAEA;;;MAIMA,gB,YACF,0BAAc,uCACV,KAAKC,MAAL,CAAcD,gBAAgBE,eAA9B,CACA,KAAKC,SAAL,CAAiBC,GAAjB,CACA,KAAKC,SAAL,CAAiB,IAAjB,CACA,KAAKC,SAAL,CAAiB,IAAjB,CACA,KAAKC,IAAL,CAAY,IAAZ,CACA,KAAKC,QAAL,CAAgBJ,GAAhB,CACA,KAAKK,SAAL,CAAiBL,GAAjB,CACA,KAAKM,KAAL,CAAa,IAAb,CACA,KAAKC,GAAL,CAAW,IAAX,CACA,KAAKC,eAAL,CAAuB,IAAvB,CACA,KAAKC,gBAAL,CAAwB,IAAxB,CACA,KAAKC,aAAL,CAAqB,IAArB,CACA,KAAKC,cAAL,CAAsB,IAAtB,CACA,KAAKC,OAAL,CAAeZ,GAAf,CACA,KAAKa,KAAL,CAAab,GAAb,CACA,KAAKc,qBAAL,CAA6B,IAA7B,CACA,KAAKC,mBAAL,CAA2B,IAA3B,CACA,KAAKC,aAAL,CAAqB,IAArB,CACA,KAAKC,WAAL,CAAmBjB,GAAnB,CACA,KAAKkB,UAAL,CAAkBlB,GAAlB,CACA,KAAKmB,gBAAL,CAAwBnB,GAAxB,CACA,KAAKoB,YAAL,CAAoB,aAApB,CACA,KAAKC,gBAAL,CAAwB,IAAxB,CACH,C,qGAEyB,CACtB,MAAQ,MAAKlB,IAAL,EAAa,KAAKA,IAAL,GAAcmB,yBAAYC,iBAA/C,CACH,C,wCAEOC,I,CAAM,CACV,KAAKrB,IAAL,CAAYqB,MAAQA,KAAKC,IAAb,CAAoBH,yBAAYC,iBAAhC,CAAoDD,yBAAYI,kBAA5E,CACA,KAAKnB,GAAL,CAAWiB,MAAQA,KAAKjB,GAAb,CAAmBiB,KAAKjB,GAAxB,CAA8B,IAAzC,CACA,KAAKD,KAAL,CAAakB,MAAQA,KAAKlB,KAAb,CAAqBkB,KAAKlB,KAAL,CAAWqB,KAAX,CAAmB,GAAnB,CAAyBH,KAAKlB,KAAL,CAAWsB,GAAzD,CAA+D,IAA5E,CACA,KAAK3B,SAAL,CAAiBuB,MAAQA,KAAKvB,SAAb,CAAyBuB,KAAKvB,SAA9B,CAA0C,IAA3D,CACH,C,+BAGLL,gBAAgBE,eAAhB,CAAkC,UAAlC,CACAF,gBAAgBiC,eAAhB,CAAkC,UAAlC,C,gBAEejC,e","file":"FragmentRequest.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { HTTPRequest } from '../vo/metrics/HTTPRequest';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor() {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n"]}