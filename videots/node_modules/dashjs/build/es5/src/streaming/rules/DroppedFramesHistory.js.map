{"version":3,"sources":["../../../../../src/streaming/rules/DroppedFramesHistory.js"],"names":["DroppedFramesHistory","values","lastDroppedFrames","lastTotalFrames","push","index","playbackQuality","droppedVideoFrames","totalVideoFrames","intervalDroppedFrames","intervalTotalFrames","isNaN","getDroppedFrameHistory","reset","getFrameHistory","__dashjs_factory_name","factory","FactoryMaker","getClassFactory"],"mappings":"sEACA,qD,4IAGA,QAASA,qBAAT,EAAgC,CAE5B,GAAIC,QAAS,EAAb,CACA,GAAIC,mBAAoB,CAAxB,CACA,GAAIC,iBAAkB,CAAtB,CAEA,QAASC,KAAT,CAAcC,KAAd,CAAqBC,eAArB,CAAsC,CAClC,GAAIC,oBAAqBD,iBAAmBA,gBAAgBC,kBAAnC,CAAwDD,gBAAgBC,kBAAxE,CAA6F,CAAtH,CACA,GAAIC,kBAAmBF,iBAAmBA,gBAAgBE,gBAAnC,CAAsDF,gBAAgBE,gBAAtE,CAAyF,CAAhH,CAEA,GAAIC,uBAAwBF,mBAAqBL,iBAAjD,CACAA,kBAAoBK,kBAApB,CAEA,GAAIG,qBAAsBF,iBAAmBL,eAA7C,CACAA,gBAAkBK,gBAAlB,CAEA,GAAI,CAACG,MAAMN,KAAN,CAAL,CAAmB,CACf,GAAI,CAACJ,OAAOI,KAAP,CAAL,CAAoB,CAChBJ,OAAOI,KAAP,EAAgB,CAACE,mBAAoBE,qBAArB,CAA4CD,iBAAkBE,mBAA9D,CAAhB,CACH,CAFD,IAEO,CACHT,OAAOI,KAAP,EAAcE,kBAAd,EAAoCE,qBAApC,CACAR,OAAOI,KAAP,EAAcG,gBAAd,EAAkCE,mBAAlC,CACH,CACJ,CACJ,CAED,QAASE,uBAAT,EAAkC,CAC9B,MAAOX,OAAP,CACH,CAED,QAASY,MAAT,CAAeP,eAAf,CAAgC,CAC5BL,OAAS,EAAT,CACAC,kBAAoBI,gBAAgBC,kBAApC,CACAJ,gBAAkBG,gBAAgBE,gBAAlC,CACH,CAED,MAAO,CACHJ,KAAMA,IADH,CAEHU,gBAAiBF,sBAFd,CAGHC,MAAOA,KAHJ,CAAP,CAKH,CAEDb,qBAAqBe,qBAArB,CAA6C,sBAA7C,CACA,GAAMC,SAAUC,uBAAaC,eAAb,CAA6BlB,oBAA7B,CAAhB,C,gBACegB,O","file":"DroppedFramesHistory.js","sourcesContent":["\nimport FactoryMaker from '../../core/FactoryMaker';\n\n\nfunction DroppedFramesHistory() {\n\n    let values = [];\n    let lastDroppedFrames = 0;\n    let lastTotalFrames = 0;\n\n    function push(index, playbackQuality) {\n        let droppedVideoFrames = playbackQuality && playbackQuality.droppedVideoFrames ? playbackQuality.droppedVideoFrames : 0;\n        let totalVideoFrames = playbackQuality && playbackQuality.totalVideoFrames ? playbackQuality.totalVideoFrames : 0;\n\n        let intervalDroppedFrames = droppedVideoFrames - lastDroppedFrames;\n        lastDroppedFrames = droppedVideoFrames;\n\n        let intervalTotalFrames = totalVideoFrames - lastTotalFrames;\n        lastTotalFrames = totalVideoFrames;\n\n        if (!isNaN(index)) {\n            if (!values[index]) {\n                values[index] = {droppedVideoFrames: intervalDroppedFrames, totalVideoFrames: intervalTotalFrames};\n            } else {\n                values[index].droppedVideoFrames += intervalDroppedFrames;\n                values[index].totalVideoFrames += intervalTotalFrames;\n            }\n        }\n    }\n\n    function getDroppedFrameHistory() {\n        return values;\n    }\n\n    function reset(playbackQuality) {\n        values = [];\n        lastDroppedFrames = playbackQuality.droppedVideoFrames;\n        lastTotalFrames = playbackQuality.totalVideoFrames;\n    }\n\n    return {\n        push: push,\n        getFrameHistory: getDroppedFrameHistory,\n        reset: reset\n    };\n}\n\nDroppedFramesHistory.__dashjs_factory_name = 'DroppedFramesHistory';\nconst factory = FactoryMaker.getClassFactory(DroppedFramesHistory);\nexport default factory;\n"]}